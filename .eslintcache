[{"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\index.tsx":"1","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\store.ts":"2","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\App.tsx":"3","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\rootReducer.ts":"4","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\theme.ts":"5","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\routes.tsx":"6","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\layoutSlice.ts":"7","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\authSlice.ts":"8","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\globalFontSize.ts":"9","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\color.ts":"10","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\colors\\colors.ts":"11","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\privateRoutes.tsx":"12","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\publicRoutes.tsx":"13","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\paths.tsx":"14","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carComparision\\index.tsx":"15","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\SearchUsedCars\\index.tsx":"16","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithMobile.tsx":"17","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithEmail.tsx":"18","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\index.tsx":"19","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carDetail\\index.tsx":"20","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\verificationPage\\index.tsx":"21","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\index.tsx":"22","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\index.tsx":"23","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\globalStyles.ts":"24","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\formsConstants.ts":"25","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\index.tsx":"26","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\index.tsx":"27","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\index.tsx":"28","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\index.tsx":"29","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\home\\index.tsx":"30","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\buttonLabels.ts":"31","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\useForm.ts":"32","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\footerData.ts":"33","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Header.tsx":"34","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\useForm.ts":"35","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\useForm.ts":"36","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\useForm.ts":"37","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\filtersData.ts":"38","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\listingData.ts":"39","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\regex.ts":"40","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\index.tsx":"41","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\FullScreenDialog.tsx":"42","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\index.tsx":"43","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\paths.tsx":"44","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomButton.tsx":"45","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\useStyles.tsx":"46","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\color.constants.tsx":"47","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\Sidebar.tsx":"48","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\useForm.ts":"49","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\addEditCarData.ts":"50","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CustomStepperIcon.tsx":"51","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\useAddEditCar.tsx":"52","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\themeConstants.tsx":"53","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\styles.ts":"54","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\styles.ts":"55","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\HorizontalFilters\\index.tsx":"56","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\index.tsx":"57","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\index.tsx":"58","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\BreadCrumbs\\index.tsx":"59","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\style.tsx":"60","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\sidebarStyles.tsx":"61","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\UploadPhotosForm.tsx":"62","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarInformationForm.tsx":"63","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarAdditionalInformation.tsx":"64","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\Banner.tsx":"65","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\styles.ts":"66","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\styles.ts":"67","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\InputFieldWithButton.tsx":"68","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectComponent.tsx":"69","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\useHooks.tsx":"70","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\bannerStyles.tsx":"71","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\CustomTitle.tsx":"72","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\SearchSelect.tsx":"73","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\index.tsx":"74","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\index.tsx":"75","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\LayoutToggler\\index.tsx":"76","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\index.tsx":"77","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\Size.tsx":"78","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\DialogBox.tsx":"79","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\Breakpoints.tsx":"80","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\selectStyles.tsx":"81","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\styles.ts":"82","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\styles.ts":"83","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\index.tsx":"84","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\ListingBanner\\ListBannerContainer.tsx":"85","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\Text.tsx":"86","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\ListingBannerContext.tsx":"87","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\useStyles.tsx":"88","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\Text.ts":"89","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\index.tsx":"90","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\useStyles.ts":"91","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\dashboard\\index.tsx":"92","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Toast.tsx":"93","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\useApi.ts":"94","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\postAd\\index.tsx":"95","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carComparision.tsx":"96","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\convertDate\\index.tsx":"97","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\loginWithMobile.tsx":"98","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\endpoints.ts":"99","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\API.ts":"100","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\axiosInstances.ts":"101","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\helperFunctions.ts":"102","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectInputComponent.tsx":"103","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\functions\\authMethod.ts":"104","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\functions\\userAuth.ts":"105","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\firebase-config.ts":"106","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\ComparisonContext.tsx":"107","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\CategorySection.tsx":"108","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\endpoints.ts":"109","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\useStyles.ts":"110","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarInformation.tsx":"111","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\Slider.tsx":"112","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carDetail.ts":"113","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarDetail.tsx":"114","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Container.tsx":"115","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\actions.ts":"116","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\useStyles.tsx":"117","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\useStyles.tsx":"118","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\SellerDetail.tsx":"119","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Table.tsx":"120","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\useStyles.ts":"121","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\TableRows.tsx":"122","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedTable.tsx":"123","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedRows.tsx":"124","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\homePageData.ts":"125","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\PostAd\\index.tsx":"126","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\PostAd\\styles.ts":"127","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Tabs\\index.tsx":"128","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Tabs\\styles.ts":"129","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Tabs\\tabsPanel.tsx":"130","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Slider\\index.tsx":"131","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\OptionsCard\\index.tsx":"132","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Slider\\styles.ts":"133","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\OptionsCard\\styles.ts":"134"},{"size":360,"mtime":1626090394180,"results":"135","hashOfConfig":"136"},{"size":487,"mtime":1625854514260,"results":"137","hashOfConfig":"136"},{"size":569,"mtime":1628936715503,"results":"138","hashOfConfig":"136"},{"size":254,"mtime":1627125065897,"results":"139","hashOfConfig":"136"},{"size":2100,"mtime":1628686403734,"results":"140","hashOfConfig":"136"},{"size":1069,"mtime":1625854514302,"results":"141","hashOfConfig":"136"},{"size":462,"mtime":1628187206727,"results":"142","hashOfConfig":"136"},{"size":767,"mtime":1628335153167,"results":"143","hashOfConfig":"136"},{"size":952,"mtime":1626451012547,"results":"144","hashOfConfig":"136"},{"size":166,"mtime":1628936715587,"results":"145","hashOfConfig":"136"},{"size":448,"mtime":1628881456544,"results":"146","hashOfConfig":"136"},{"size":796,"mtime":1628881456543,"results":"147","hashOfConfig":"136"},{"size":463,"mtime":1628793600931,"results":"148","hashOfConfig":"136"},{"size":4470,"mtime":1628947592585,"results":"149","hashOfConfig":"136"},{"size":1184,"mtime":1628881456540,"results":"150","hashOfConfig":"136"},{"size":223,"mtime":1628335153155,"results":"151","hashOfConfig":"136"},{"size":4673,"mtime":1628936715568,"results":"152","hashOfConfig":"136"},{"size":4656,"mtime":1628938451020,"results":"153","hashOfConfig":"136"},{"size":970,"mtime":1628936715537,"results":"154","hashOfConfig":"136"},{"size":3388,"mtime":1628881456541,"results":"155","hashOfConfig":"136"},{"size":255,"mtime":1628936715574,"results":"156","hashOfConfig":"136"},{"size":2779,"mtime":1628866541358,"results":"157","hashOfConfig":"136"},{"size":3503,"mtime":1628936715570,"results":"158","hashOfConfig":"136"},{"size":1019,"mtime":1628187206548,"results":"159","hashOfConfig":"136"},{"size":785,"mtime":1628686403637,"results":"160","hashOfConfig":"136"},{"size":3095,"mtime":1628936715560,"results":"161","hashOfConfig":"136"},{"size":3223,"mtime":1628936715546,"results":"162","hashOfConfig":"136"},{"size":7225,"mtime":1628936715540,"results":"163","hashOfConfig":"136"},{"size":4589,"mtime":1628936715553,"results":"164","hashOfConfig":"136"},{"size":1257,"mtime":1628944650527,"results":"165","hashOfConfig":"136"},{"size":1524,"mtime":1628936715590,"results":"166","hashOfConfig":"136"},{"size":3811,"mtime":1628938934031,"results":"167","hashOfConfig":"136"},{"size":2474,"mtime":1626086088388,"results":"168","hashOfConfig":"136"},{"size":2273,"mtime":1628335152983,"results":"169","hashOfConfig":"136"},{"size":2237,"mtime":1628936715548,"results":"170","hashOfConfig":"136"},{"size":2538,"mtime":1628936715558,"results":"171","hashOfConfig":"136"},{"size":5225,"mtime":1628943756832,"results":"172","hashOfConfig":"136"},{"size":2170,"mtime":1628945352156,"results":"173","hashOfConfig":"136"},{"size":495,"mtime":1628936715511,"results":"174","hashOfConfig":"136"},{"size":939,"mtime":1628187206268,"results":"175","hashOfConfig":"136"},{"size":894,"mtime":1628187206298,"results":"176","hashOfConfig":"136"},{"size":2164,"mtime":1628187206285,"results":"177","hashOfConfig":"136"},{"size":7209,"mtime":1628187206744,"results":"178","hashOfConfig":"136"},{"size":280,"mtime":1628335152989,"results":"179","hashOfConfig":"136"},{"size":1192,"mtime":1628944356124,"results":"180","hashOfConfig":"136"},{"size":1587,"mtime":1628335152990,"results":"181","hashOfConfig":"136"},{"size":459,"mtime":1628791338074,"results":"182","hashOfConfig":"136"},{"size":1892,"mtime":1628335152985,"results":"183","hashOfConfig":"136"},{"size":2139,"mtime":1628936715563,"results":"184","hashOfConfig":"136"},{"size":2833,"mtime":1628866541233,"results":"185","hashOfConfig":"136"},{"size":1746,"mtime":1628866541355,"results":"186","hashOfConfig":"136"},{"size":6620,"mtime":1628866541364,"results":"187","hashOfConfig":"136"},{"size":513,"mtime":1628088100901,"results":"188","hashOfConfig":"136"},{"size":643,"mtime":1628936715527,"results":"189","hashOfConfig":"136"},{"size":1186,"mtime":1628187206855,"results":"190","hashOfConfig":"136"},{"size":1568,"mtime":1628936715581,"results":"191","hashOfConfig":"136"},{"size":24690,"mtime":1628945555946,"results":"192","hashOfConfig":"136"},{"size":5398,"mtime":1628936715531,"results":"193","hashOfConfig":"136"},{"size":1748,"mtime":1628187206282,"results":"194","hashOfConfig":"136"},{"size":786,"mtime":1628936715525,"results":"195","hashOfConfig":"136"},{"size":910,"mtime":1628335152988,"results":"196","hashOfConfig":"136"},{"size":3566,"mtime":1628102929322,"results":"197","hashOfConfig":"136"},{"size":5823,"mtime":1628866541352,"results":"198","hashOfConfig":"136"},{"size":5784,"mtime":1628866541352,"results":"199","hashOfConfig":"136"},{"size":2831,"mtime":1628881456489,"results":"200","hashOfConfig":"136"},{"size":1784,"mtime":1628187206529,"results":"201","hashOfConfig":"136"},{"size":143,"mtime":1628187206943,"results":"202","hashOfConfig":"136"},{"size":1559,"mtime":1628187206297,"results":"203","hashOfConfig":"136"},{"size":471,"mtime":1628088100654,"results":"204","hashOfConfig":"136"},{"size":361,"mtime":1628791338058,"results":"205","hashOfConfig":"136"},{"size":775,"mtime":1628335152981,"results":"206","hashOfConfig":"136"},{"size":1229,"mtime":1628335152898,"results":"207","hashOfConfig":"136"},{"size":3636,"mtime":1628791338051,"results":"208","hashOfConfig":"136"},{"size":824,"mtime":1628187206287,"results":"209","hashOfConfig":"136"},{"size":849,"mtime":1628187206276,"results":"210","hashOfConfig":"136"},{"size":1317,"mtime":1628187206473,"results":"211","hashOfConfig":"136"},{"size":1102,"mtime":1628187206289,"results":"212","hashOfConfig":"136"},{"size":256,"mtime":1628335152901,"results":"213","hashOfConfig":"136"},{"size":1038,"mtime":1628187206284,"results":"214","hashOfConfig":"136"},{"size":249,"mtime":1628088100634,"results":"215","hashOfConfig":"136"},{"size":1454,"mtime":1628791338052,"results":"216","hashOfConfig":"136"},{"size":515,"mtime":1628187206294,"results":"217","hashOfConfig":"136"},{"size":178,"mtime":1628187206280,"results":"218","hashOfConfig":"136"},{"size":604,"mtime":1628335152917,"results":"219","hashOfConfig":"136"},{"size":607,"mtime":1628335152992,"results":"220","hashOfConfig":"136"},{"size":1903,"mtime":1628791338073,"results":"221","hashOfConfig":"136"},{"size":1441,"mtime":1628791338049,"results":"222","hashOfConfig":"136"},{"size":1151,"mtime":1628791338050,"results":"223","hashOfConfig":"136"},{"size":1487,"mtime":1628791338266,"results":"224","hashOfConfig":"136"},{"size":2269,"mtime":1628791338059,"results":"225","hashOfConfig":"136"},{"size":1202,"mtime":1628791338061,"results":"226","hashOfConfig":"136"},{"size":319,"mtime":1628791338089,"results":"227","hashOfConfig":"136"},{"size":662,"mtime":1628936715533,"results":"228","hashOfConfig":"136"},{"size":7276,"mtime":1628938307230,"results":"229","hashOfConfig":"136"},{"size":436,"mtime":1628791338091,"results":"230","hashOfConfig":"136"},{"size":484,"mtime":1628881456504,"results":"231","hashOfConfig":"136"},{"size":211,"mtime":1628791338055,"results":"232","hashOfConfig":"136"},{"size":3523,"mtime":1628936715556,"results":"233","hashOfConfig":"136"},{"size":337,"mtime":1628936715509,"results":"234","hashOfConfig":"136"},{"size":1060,"mtime":1628936715505,"results":"235","hashOfConfig":"136"},{"size":633,"mtime":1628936715507,"results":"236","hashOfConfig":"136"},{"size":293,"mtime":1628866541235,"results":"237","hashOfConfig":"136"},{"size":1925,"mtime":1628866541355,"results":"238","hashOfConfig":"136"},{"size":201,"mtime":1628936715515,"results":"239","hashOfConfig":"136"},{"size":322,"mtime":1628936715517,"results":"240","hashOfConfig":"136"},{"size":470,"mtime":1628936715534,"results":"241","hashOfConfig":"136"},{"size":4200,"mtime":1628881456495,"results":"242","hashOfConfig":"136"},{"size":2040,"mtime":1628881456496,"results":"243","hashOfConfig":"136"},{"size":614,"mtime":1628881456487,"results":"244","hashOfConfig":"136"},{"size":4006,"mtime":1628881456493,"results":"245","hashOfConfig":"136"},{"size":3184,"mtime":1628881456491,"results":"246","hashOfConfig":"136"},{"size":3982,"mtime":1628881456492,"results":"247","hashOfConfig":"136"},{"size":2705,"mtime":1628881456505,"results":"248","hashOfConfig":"136"},{"size":4122,"mtime":1628881456490,"results":"249","hashOfConfig":"136"},{"size":1046,"mtime":1628881456501,"results":"250","hashOfConfig":"136"},{"size":1866,"mtime":1628881456486,"results":"251","hashOfConfig":"136"},{"size":665,"mtime":1628881456497,"results":"252","hashOfConfig":"136"},{"size":1325,"mtime":1628881456495,"results":"253","hashOfConfig":"136"},{"size":487,"mtime":1628881456492,"results":"254","hashOfConfig":"136"},{"size":2015,"mtime":1628881456501,"results":"255","hashOfConfig":"136"},{"size":1074,"mtime":1628881456503,"results":"256","hashOfConfig":"136"},{"size":2233,"mtime":1628881456502,"results":"257","hashOfConfig":"136"},{"size":1224,"mtime":1628881456500,"results":"258","hashOfConfig":"136"},{"size":2254,"mtime":1628881456499,"results":"259","hashOfConfig":"136"},{"size":3190,"mtime":1628946439062,"results":"260","hashOfConfig":"136"},{"size":1914,"mtime":1628944695058,"results":"261","hashOfConfig":"136"},{"size":479,"mtime":1628187206937,"results":"262","hashOfConfig":"136"},{"size":3445,"mtime":1628947484438,"results":"263","hashOfConfig":"136"},{"size":242,"mtime":1628187206545,"results":"264","hashOfConfig":"136"},{"size":475,"mtime":1628187206546,"results":"265","hashOfConfig":"136"},{"size":718,"mtime":1628335153576,"results":"266","hashOfConfig":"136"},{"size":5078,"mtime":1628947029574,"results":"267","hashOfConfig":"136"},{"size":533,"mtime":1628187206538,"results":"268","hashOfConfig":"136"},{"size":1128,"mtime":1628187206533,"results":"269","hashOfConfig":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},"og5drl",{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"272"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"272"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"272"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"272"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"272"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"272"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"272"},"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\index.tsx",[],["546","547"],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\store.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\App.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\theme.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\routes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\layoutSlice.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\authSlice.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\globalFontSize.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\color.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\colors\\colors.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\privateRoutes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\publicRoutes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\paths.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carComparision\\index.tsx",["548"],"import Table from \"../../layout/Sections/Sections/Table/Container\"\r\nimport {Grid} from \"@material-ui/core\"\r\nimport Section from '../../components/index'\r\nimport useApi from \"../../Utils/hooks/useApi\";\r\nimport { compareCars } from \"../../Utils/hooks/endpoints\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Colors} from \"../../Utils/constants/colors/colors\"\r\n\r\ninterface RouterProps {\r\n    _fId: string;\r\n    _sId: string;\r\n  }\r\n\r\nconst CarComparision = () => {\r\n    const { loadAllData, data, isLoading } = useApi();\r\n    const { _fId, _sId } = useParams<RouterProps>();\r\n    const {iceBlue} = Colors\r\n    useEffect(() => {\r\n      loadAllData(compareCars, `_id=${_fId}&_id=${_sId}`);\r\n    }, []);\r\n    return (\r\n      <Grid container style={{marginTop: \"50px\",display: \"flex\",justifyContent: \"center\"}}>\r\n      {isLoading || data.length === 0 ? (\r\n        <h1>Loading..</h1>\r\n      ) : (\r\n           <Grid style={{marginBottom: \"80px\"}} item xs={12}>\r\n           <Section backColor={iceBlue} >\r\n            <Table data={data}  />\r\n            </Section>\r\n           </Grid>)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CarComparision\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\SearchUsedCars\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithMobile.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithEmail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carDetail\\index.tsx",["549"],"import CarDetail from \"../../layout/Sections/Sections/CarDetail/CarDetail\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\nimport {\r\n  Title,\r\n  rating,\r\n  mainButton,\r\n  numButton,\r\n  desc,\r\n  array,\r\n  locIcon,\r\n  mailIcon,\r\n  ratIcon,\r\n  numbIcon,\r\n  arr,\r\n  CarInfo,\r\n  CarFeature,\r\n  carTitle,\r\n} from \"../../layout/Sections/Utils/carDetail\";\r\nimport Section from \"../../components/index\";\r\nimport Slides from \"../../layout/Sections/Sections/CarDetail/Slider\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { useStyles } from \"../../layout/Sections/Sections/CarDetail/useStyles\";\r\nimport CarInformation from \"../../layout/Sections/Sections/CarDetail/CarInformation\";\r\nimport { getSingleCar } from \"../../Utils/hooks/endpoints\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useApi from \"../../Utils/hooks/useApi\"\r\n\r\ninterface RouteProps {\r\n  id: string;\r\n}\r\nconst CarDetailContainer = () => {\r\n  const {loadSingleData,isLoading,obj} = useApi()\r\n  const { main } = useStyles();\r\n  const { id } = useParams<RouteProps>();\r\n\r\n  useEffect(() => {\r\n    loadSingleData(getSingleCar,id);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid style={{ display: \"flex\", justifyContent: \"center\" }} container>\r\n      <Section>\r\n        {isLoading || !obj ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <>\r\n            <Grid className={main} item xs={12}>\r\n              <Slides\r\n                carTitle={carTitle}\r\n                info={CarInfo}\r\n                feature={CarFeature}\r\n                desc={desc}\r\n                paragraph={obj?.description}\r\n                arr={arr}\r\n                id={obj?._id}\r\n                city={obj?.registeredCity}\r\n                assembly={obj?.assembly}\r\n                color={obj?.bodyColor}\r\n                bodyType={obj?.bodyType}\r\n                engineCapacity={obj?.engineCapacity}\r\n                date={obj.date}\r\n                isFavs={obj.isFav}\r\n              />\r\n              <CarDetail\r\n                mainButton={mainButton}\r\n                numButton={numButton}\r\n                Title={Title}\r\n                location={obj?.city}\r\n                rating={rating}\r\n                array={array}\r\n                locIcon={locIcon}\r\n                mailIcon={mailIcon}\r\n                ratIcon={ratIcon}\r\n                numbIcon={numbIcon}\r\n                paragraph={obj?.description}\r\n                desc={desc}\r\n                price={obj?.price}\r\n                year={obj?.year}\r\n                transmission={obj?.transmission}\r\n                mileage={obj?.milage}\r\n                engineType={obj?.engineType}\r\n              />\r\n            </Grid>\r\n            <Hidden lgUp>\r\n              <Grid item xs={12}>\r\n                <CarInformation\r\n                  carTitle={carTitle}\r\n                  info={CarInfo}\r\n                  // feature={data?.features}\r\n                  feature={CarFeature}\r\n                  city={obj?.registeredCity}\r\n                  assembly={obj?.assembly}\r\n                  color={obj?.bodyColor}\r\n                  bodyType={obj?.bodyType}\r\n                  engineCapacity={obj?.engineCapacity}\r\n                  date={obj.date}\r\n                />\r\n              </Grid>\r\n            </Hidden>\r\n          </>\r\n        )}\r\n      </Section>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CarDetailContainer;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\verificationPage\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\index.tsx",["550"],"import { NavLink, useHistory } from \"react-router-dom\";\r\nimport Toast from \"../../components/Toast\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  Card,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { EmailRounded, PhoneAndroidRounded } from \"@material-ui/icons\";\r\nimport {\r\n  SIGNIN,\r\n  SIGNUP,\r\n  CONTINUE_WITH_PHONE,\r\n  CONTINUE_WITH_GOOGLE,\r\n  CONTINUE_WITH_FACEBOOK,\r\n  CONTINUE_WITH_EMAIL,\r\n  ALREADY_HAVE_ACCOUNT,\r\n} from \"../../Utils/constants/language/en/buttonLabels\";\r\nimport GoogleIcon from \"../../assets/icons/googleIcon.png\";\r\nimport FacebookIcon from \"../../assets/icons/fbIcon.png\";\r\nimport GlobalStyles from \"../../globalStyles\";\r\nimport { routes } from \"../../routes/paths\";\r\nimport { handleFacebookAuth, handleGoogleAuth } from \"../../Utils/API/API\";\r\nimport { useForm } from \"./useForm\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const { loginFormGrid, formCard, buttonWrap } = GlobalStyles();\r\n  const {\r\n    handleGoogleSubmit,\r\n    loading,\r\n    alertOpen,\r\n    setAlertOpen,\r\n    \r\n    responseMessage,\r\n  } = useForm();\r\n\r\n  const handleAlertClose = (\r\n    event: React.SyntheticEvent | React.MouseEvent,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setAlertOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      className={loginFormGrid}\r\n      container\r\n      justify=\"center\"\r\n      alignContent=\"center\"\r\n    >\r\n      <Grid item xs={4}>\r\n        {loading && <LinearProgress color=\"secondary\" />}\r\n        <Card className={formCard}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {SIGNUP}\r\n          </Typography>\r\n          <Button\r\n            className={buttonWrap}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            startIcon={<PhoneAndroidRounded />}\r\n            onClick={() => history.push(routes.signupWithMobile)}\r\n          >\r\n            {CONTINUE_WITH_PHONE}\r\n          </Button>\r\n          <Button\r\n            className={buttonWrap}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            startIcon={<img src={GoogleIcon} alt=\"google-icon\" />}\r\n            onClick={() => handleGoogleSubmit()}\r\n          >\r\n            {CONTINUE_WITH_GOOGLE}\r\n          </Button>\r\n          <Button\r\n            className={buttonWrap}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            startIcon={<img src={FacebookIcon} alt=\"facebook-icon\" />}\r\n            onClick={() => handleFacebookAuth()}\r\n          >\r\n            {CONTINUE_WITH_FACEBOOK}\r\n          </Button>\r\n          <Button\r\n            className={buttonWrap}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            startIcon={<EmailRounded />}\r\n            onClick={() => history.push(routes.signupWithEmail)}\r\n          >\r\n            {CONTINUE_WITH_EMAIL}\r\n          </Button>\r\n          <Typography\r\n            style={{ margin: \"30px 0\" }}\r\n            align=\"center\"\r\n            variant=\"body2\"\r\n            component=\"h6\"\r\n            gutterBottom\r\n          >\r\n            {ALREADY_HAVE_ACCOUNT} <NavLink to={routes.login}>{SIGNIN}</NavLink>\r\n          </Typography>\r\n        </Card>\r\n        {responseMessage.status === \"success\" && history.push(routes.verification)}\r\n      </Grid>\r\n      {responseMessage && (\r\n        <Toast\r\n          open={alertOpen}\r\n          onClose={handleAlertClose}\r\n         type={responseMessage.status}\r\n          message={responseMessage.message}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\globalStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\formsConstants.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\home\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\buttonLabels.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\footerData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Header.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\useForm.ts",["551","552","553","554"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useApi from \"../../Utils/hooks/useApi\";\r\nimport { API_ENDPOINTS } from \"../../Utils/API/endpoints\";\r\nimport { KeyObject } from \"crypto\";\r\n// import { fieldNames, messages } from \"../../Utils/constants/formsConstants\";\r\n\r\nconst initialValues: any = {\r\n  keywords: \"\",\r\n  priceFrom: 0,\r\n  priceTo: 0,\r\n  priceRange: [0, 50000000],\r\n  yearFrom: 0,\r\n  yearTo: 0,\r\n  yearRange: [1900, 2021],\r\n  province: [],\r\n  city: [],\r\n  mileageFrom: 0,\r\n  mileageTo: 0,\r\n  registrationCity: [],\r\n  mileageRange: [0, 1000000],\r\n  transmission: [],\r\n  engineType: [],\r\n  engineCapacityFrom: 0,\r\n  engineCapacityTo: 0,\r\n  engineCapacityRange: [600, 30000],\r\n  color: [],\r\n  bodyType: [],\r\n  pictireAvailability: false,\r\n  videoAvailability: false,\r\n  sellerType: [],\r\n  adType: [],\r\n  sortingOptions: \"\",\r\n};\r\n\r\nexport const useForm = (validateOnChange = true) => {\r\n  const { CARS } = API_ENDPOINTS;\r\n  const {\r\n    loading,\r\n    alertOpen,\r\n    setAlertOpen,\r\n    responseMessage,\r\n    responseData,\r\n    getAll,\r\n  } = useApi();\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(initialValues);\r\n  const [appliedFilters, setAppliedFilters] = useState<any>([]);\r\n\r\n  function inArray(needle: string, haystack: []) {\r\n    var length = haystack.length;\r\n    for (var i = 0; i < length; i++) {\r\n      if (haystack[i] == needle) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const getAllCars = useCallback(async () => {\r\n    // let queryParams = new URLSearchParams({\r\n    //   keywords: values.keywords,\r\n    //   limit: \"2\",\r\n    //   page: \"1\",\r\n    //   city: values.city,\r\n    // });\r\n    let queryParams = `limit=2&page=1${\r\n      inArray(\"keywords\", appliedFilters) ? \"&keyword=\" + values.keywords : \"\"\r\n    }${appliedFilters.map((key: any) =>\r\n      inArray(key, appliedFilters)\r\n        ? typeof values[key] === typeof []\r\n          ? values[key].map((filter: any) => `${key}=${filter}`)\r\n          : null\r\n        : null\r\n    )}`;\r\n\r\n    console.log(\"queryParams\", queryParams);\r\n    await getAll(CARS + queryParams);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllCars();\r\n  }, [getAllCars, values]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Applied filters\", appliedFilters);\r\n  }, [appliedFilters]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"values\", values);\r\n  }, [values]);\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n    if (values[name] !== value) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    filterName: string\r\n  ) => {\r\n    let temp = values[filterName];\r\n    if (e.target.checked) {\r\n      temp.push(e.target.name);\r\n    } else {\r\n      temp = temp.filter((item: string) => item !== e.target.name);\r\n    }\r\n    setValues({ ...values, [filterName]: temp });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(filterName)) {\r\n        setAppliedFilters([...appliedFilters, filterName]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(filterName);\r\n    }\r\n  };\r\n\r\n  const handleSingleCheckBoxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, checked } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: checked,\r\n    });\r\n    if (validateOnChange) validate({ [name]: checked });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(name);\r\n    }\r\n  };\r\n\r\n  const removeFilter = (filterName: string) => {\r\n    setAppliedFilters(\r\n      appliedFilters.filter((filter: string) => filter !== filterName)\r\n    );\r\n    console.log(\"filter name\", filterName);\r\n    let tempVal: any = values;\r\n    tempVal[filterName] = initialValues[filterName];\r\n    if (typeof tempVal[filterName] === typeof [\"\"]) {\r\n      tempVal[filterName] = [];\r\n    }\r\n    console.log(\r\n      \"tempVal\",\r\n      tempVal,\r\n      tempVal[filterName],\r\n      initialValues,\r\n      typeof filterName\r\n    );\r\n    setValues(tempVal);\r\n    // setValues({ ...values, [filterName]: initialValues[filterName] });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"btn clicked\", values);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    setAppliedFilters,\r\n    removeFilter,\r\n    resetForm,\r\n    validate,\r\n    handleSubmit,\r\n    loading,\r\n    alertOpen,\r\n    setAlertOpen,\r\n    responseMessage,\r\n  };\r\n};\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\filtersData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\listingData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\regex.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\FullScreenDialog.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\paths.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomButton.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\color.constants.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\addEditCarData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CustomStepperIcon.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\useAddEditCar.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\themeConstants.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\HorizontalFilters\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\index.tsx",["555"],"import { useState } from \"react\";\r\nimport { useForm } from \"../../pages/carsListing/useForm\";\r\nimport {\r\n  Grid,\r\n  Slider,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FilterAccordion from \"../../components/Accordion\";\r\nimport {\r\n  Carfilters,\r\n  CarFiltersData,\r\n} from \"../../Utils/constants/language/en/filtersData\";\r\nimport { City, State } from \"country-state-city\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport InputFieldWithButton from \"../../components/InputField/InputFieldWithButton\";\r\nimport InputField from \"../../components/InputField\";\r\nimport { fieldNames } from \"../../Utils/constants/formsConstants\";\r\nimport VerticalFilterStyles from \"./styles\";\r\nimport DialogBox from \"../../components/DialogBox\";\r\nimport { ICity } from \"country-state-city/dist/lib/interface\";\r\nimport { APPLIED_FILTERS } from \"../../Utils/constants/language/en/buttonLabels\";\r\n\r\nexport interface CarFiltersProps {}\r\n\r\nconst CarFilters: React.FC<CarFiltersProps> = () => {\r\n  const [searchResult, setSearchResult] = useState<ICity[]>();\r\n  const {} = VerticalFilterStyles();\r\n  const {\r\n    KEYWORDS,\r\n    PRICE_RANGE,\r\n    YEAR,\r\n    MAKE,\r\n    PROVINCE,\r\n    CITY,\r\n    REGISTRATION_CITY,\r\n    MILEAGE,\r\n    TRANSMISSION,\r\n    ENGINE_TYPE,\r\n    ENGINE_CAPACITY,\r\n    COLOR,\r\n    BODY_TYPE,\r\n    PICTURE_AVAILABILITY,\r\n    VIDEO_AVAILABILITY,\r\n    SELLER_TYPE,\r\n    AD_TYPE\r\n  } = CarFiltersData;\r\n\r\n  const majorCities = [\"Karachi\", \"Islamabad\", \"Lahore\", \"Peshawar\", \"Quetta\"];\r\n  const mainCarTypes = [\"Sedan\", \"Hatchback\", \"Pick Up\"];\r\n  const mainColors = [\"Black\", \"White\", \"Red\"];\r\n  const cities = City.getCitiesOfCountry(\"PK\");\r\n  const provinces = State.getStatesOfCountry(\"PK\");\r\n  const extractedCityNames = cities?.map((item) => item.name);\r\n  let cityNames = [];\r\n  if (extractedCityNames) {\r\n    cityNames.push(...extractedCityNames);\r\n  }\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    removeFilter,\r\n    handleSubmit,\r\n  } = useForm(true);\r\n\r\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let result = City.getCitiesOfCountry(\"PK\")?.filter(\r\n      (city: ICity) =>\r\n        city.name.substr(0, e.target.value.length).toLowerCase() ===\r\n        e.target.value.toLowerCase()\r\n    );\r\n    if (e.target.value === \"\") {\r\n      result = [];\r\n    }\r\n    setSearchResult(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {appliedFilters.length > 0 && (\r\n        <FilterAccordion title={APPLIED_FILTERS}>\r\n          <Grid container spacing={1}>\r\n            {appliedFilters.map((filter: any) => (\r\n              <Grid\r\n                key={`filter-${filter}`}\r\n                item\r\n                container\r\n                justifyContent=\"space-between\"\r\n                xs={12}\r\n              >\r\n                <Typography variant=\"body2\">{filter}</Typography>\r\n                <IconButton size=\"small\" onClick={() => removeFilter(filter)}>\r\n                  <HighlightOffRoundedIcon color=\"secondary\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </FilterAccordion>\r\n      )}\r\n      <FilterAccordion title={KEYWORDS}>\r\n        <InputFieldWithButton\r\n          name={fieldNames.keywords}\r\n          label=\"Keywords\"\r\n          placeholder=\"Eg. Honda In Lahore\"\r\n          value={values.keywords}\r\n          error={errors.keywords}\r\n          onChange={handleInputChange}\r\n          handleClick={handleSubmit}\r\n        />\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PRICE_RANGE}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item container spacing={1}>\r\n            <Grid item xs={5}>\r\n              <InputField\r\n                name={fieldNames.priceFrom}\r\n                label=\"From\"\r\n                value={values.priceRange[0]}\r\n                error={errors.priceFrom}\r\n                onChange={(e: any) => {\r\n                  setValues((previousState: any) => {\r\n                    previousState.priceRange[0] = e.target.value;\r\n                    return { ...previousState };\r\n                  });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <InputFieldWithButton\r\n                name={fieldNames.priceTo}\r\n                label=\"To\"\r\n                value={values.priceRange[1]}\r\n                error={errors.priceTo}\r\n                onChange={(e: any) => {\r\n                  setValues((previousState: any) => {\r\n                    previousState.priceRange[1] = e.target.value;\r\n                    return { ...previousState };\r\n                  });\r\n                }}\r\n                handleClick={handleSubmit}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Slider\r\n              value={[values.priceRange[0], values.priceRange[1]]}\r\n              min={50000}\r\n              max={5000000}\r\n              onChange={(event: any, newValue: number | number[]) => {\r\n                setValues((previousState: any) => {\r\n                  console.log(newValue);\r\n                  previousState.priceRange = newValue as number[];\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={YEAR}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.yearFrom}\r\n              label=\"From\"\r\n              value={values.yearRange[0]}\r\n              error={errors.yearFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.priceRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.yearTo}\r\n              label=\"To\"\r\n              value={values.yearRange[1]}\r\n              error={errors.yearTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.priceRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={MAKE}>\r\n        <InputField label=\"Eg. Honda In Lahore\" />\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PROVINCE}>\r\n        <FormGroup>\r\n          {provinces.map((province) => (\r\n            <FormControlLabel\r\n              key={`province-${province.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.province.indexOf(province.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"province\")}\r\n                  name={province.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={province.name}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={CITY}>\r\n        <FormGroup>\r\n          {cityNames\r\n            .filter((item) => majorCities.includes(item))\r\n            .map((city) => (\r\n              <FormControlLabel\r\n                key={`city-${city}`}\r\n                control={\r\n                  <Checkbox\r\n                    checked={values.city.indexOf(city) > -1}\r\n                    onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                    name={city}\r\n                    color=\"secondary\"\r\n                  />\r\n                }\r\n                label={city}\r\n              />\r\n            ))}\r\n          <DialogBox title=\"Select Cities\">\r\n            <Grid style={{ display: \"flex\" }} container>\r\n              <Grid xs={12}>\r\n                <InputField\r\n                  variant=\"filled\"\r\n                  label=\"Search\"\r\n                  onChange={handleSearchInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  {\"Search Result\"}\r\n                </Typography>\r\n                {searchResult &&\r\n                  searchResult.map((city: ICity) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Grid>\r\n              {provinces.map((province) => (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {province.name}\r\n                  </Typography>\r\n                  {City.getCitiesOfState(\r\n                    province.countryCode,\r\n                    province.isoCode\r\n                  ).map((city) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={REGISTRATION_CITY}>\r\n        <FormGroup>\r\n          {cityNames\r\n            .filter((item) => majorCities.includes(item))\r\n            .map((city) => (\r\n              <FormControlLabel\r\n                key={`city-${city}`}\r\n                control={\r\n                  <Checkbox\r\n                    checked={values.registrationCity.indexOf(city) > -1}\r\n                    onChange={(e) =>\r\n                      handleCheckboxChange(e, \"registrationCity\")\r\n                    }\r\n                    name={city}\r\n                    color=\"secondary\"\r\n                  />\r\n                }\r\n                label={city}\r\n              />\r\n            ))}\r\n\r\n          <DialogBox title=\"Select Cities\">\r\n            <Grid style={{ display: \"flex\" }} container>\r\n              {provinces.map((province) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {province.name}\r\n                  </Typography>\r\n                  {City.getCitiesOfState(\r\n                    province.countryCode,\r\n                    province.isoCode\r\n                  ).map((city) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={MILEAGE}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.mileageFrom}\r\n              label=\"From\"\r\n              value={values.mileageRange[0]}\r\n              error={errors.mileageFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.mileageTo}\r\n              label=\"To\"\r\n              value={values.mileageRange[1]}\r\n              error={errors.mileageTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={TRANSMISSION}>\r\n        <FormGroup>\r\n          {Carfilters.TRANSMISSION.map((type) => (\r\n            <FormControlLabel\r\n              key={`transmission-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.transmission.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"transmission\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={ENGINE_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.ENGINE_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`engine-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.engineType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"engineType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={ENGINE_CAPACITY}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.engineCapacityFrom}\r\n              label=\"From\"\r\n              value={values.engineCapacityRange[0]}\r\n              error={errors.engineCapacityFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.engineCapacityTo}\r\n              label=\"To\"\r\n              value={values.engineCapacityRange[1]}\r\n              error={errors.engineCapacityTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={COLOR}>\r\n        <FormGroup>\r\n          {Carfilters.COLOR.filter((item) =>\r\n            mainColors.includes(item.text)\r\n          ).map((type) => (\r\n            <FormControlLabel\r\n              key={`color-type-${type.text}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.color.indexOf(type.text) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                  name={type.text}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <div style={{ display: \"flex\" }}>\r\n                  <span\r\n                    style={{\r\n                      borderRadius: \"50%\",\r\n                      maxWidth: \"20px\",\r\n                      maxHeight: \"20px\",\r\n                      minWidth: \"20px\",\r\n                      minHeight: \"20px\",\r\n                      backgroundColor: type.hex,\r\n                      border: \"0.2px solid grey\",\r\n                      marginRight: \"7px\",\r\n                    }}\r\n                  />\r\n                  <Typography>{type.text}</Typography>\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n          <FormControlLabel\r\n            key={`color-type-other`}\r\n            control={\r\n              <Checkbox\r\n                checked={values.color.indexOf(\"Other\") > -1}\r\n                onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                name=\"Other\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={\r\n              <div style={{ display: \"flex\" }}>\r\n                <Typography>Other Colors</Typography>\r\n              </div>\r\n            }\r\n          />\r\n\r\n          <DialogBox title=\"Select Color\">\r\n            <Grid container spacing={2}>\r\n              {Carfilters.COLOR.map((type) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControlLabel\r\n                    key={`color-type-${type.text}`}\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.color.indexOf(type.text) > -1}\r\n                        onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                        name={type.text}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <span\r\n                          style={{\r\n                            borderRadius: \"50%\",\r\n                            maxWidth: \"20px\",\r\n                            maxHeight: \"20px\",\r\n                            minWidth: \"20px\",\r\n                            minHeight: \"20px\",\r\n                            backgroundColor: type.hex,\r\n                            border: \"0.2px solid grey\",\r\n                            marginRight: \"7px\",\r\n                          }}\r\n                        />\r\n                        <Typography>{type.text}</Typography>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  key={`color-type-other`}\r\n                  control={\r\n                    <Checkbox\r\n                      checked={values.color.indexOf(\"Other\") > -1}\r\n                      onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                      name=\"Other\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                    />\r\n                  }\r\n                  label={\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <Typography>Other Colors</Typography>\r\n                    </div>\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={BODY_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.BODY_TYPE.filter((item) =>\r\n            mainCarTypes.includes(item.text)\r\n          ).map((type) => (\r\n            <FormControlLabel\r\n              key={`body-type-${type.text}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.bodyType.indexOf(type.text) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"bodyType\")}\r\n                  name={type.text}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <div style={{ display: \"flex\" }}>\r\n                  <img\r\n                    width=\"60px\"\r\n                    style={{ margin: \"0 10px\" }}\r\n                    src={type.icon}\r\n                    alt={type.text}\r\n                  />\r\n                  <Typography>{type.text}</Typography>\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n\r\n          <DialogBox title=\"Select Body Type\">\r\n            <Grid container spacing={2}>\r\n              {Carfilters.BODY_TYPE.map((type) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControlLabel\r\n                    key={`body-type-${type.text}`}\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.bodyType.indexOf(type.text) > -1}\r\n                        onChange={(e) => handleCheckboxChange(e, \"bodyType\")}\r\n                        name={type.text}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <img\r\n                          width=\"60px\"\r\n                          style={{ margin: \"0 10px\" }}\r\n                          src={type.icon}\r\n                          alt={type.text}\r\n                        />\r\n                        <Typography>{type.text}</Typography>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PICTURE_AVAILABILITY}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.withPicture}\r\n                onChange={handleSingleCheckBoxChange}\r\n                name={fieldNames.pictureAvailability}\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={Carfilters.PICTURE_AVAILABILITY[0]}\r\n          />\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={VIDEO_AVAILABILITY}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.withVideo}\r\n                onChange={handleSingleCheckBoxChange}\r\n                name={fieldNames.videoAvailability}\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={Carfilters.VIDEO_AVAILABILITY[0]}\r\n          />\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={SELLER_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.SELLER_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`seller-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.sellerType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"sellerType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={AD_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.AD_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`ad-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.adType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"adType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarFilters;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\BreadCrumbs\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\style.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\sidebarStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\UploadPhotosForm.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarInformationForm.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarAdditionalInformation.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\Banner.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\InputFieldWithButton.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectComponent.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\useHooks.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\bannerStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\CustomTitle.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\SearchSelect.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\LayoutToggler\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\Size.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\DialogBox.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\Breakpoints.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\selectStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\ListingBanner\\ListBannerContainer.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\Text.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\ListingBannerContext.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\Text.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\useStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\dashboard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Toast.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\useApi.ts",["556","557","558","559","560","561","562"],"import { useState } from \"react\";\r\nimport { addData, getAllData, handleGoogleAuth } from \"../API/API\";\r\nimport {\r\n  getData,\r\n  getSingleData,\r\n  addToFav,\r\n  deleteData,\r\n  updateUser,\r\n} from \"./actions\";\r\nimport { ICarCard } from \"../../layout/Sections/Utils/types\";\r\n\r\nconst useApi = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [obj, setObj] = useState<ICarCard>();\r\n  const [open, setOpen] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState({\r\n    status: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const getAll = async (endpoint: string) => {\r\n    setLoading(true);\r\n    await getAllData(endpoint)\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        setLoading(false);\r\n        setAlertOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: response.message,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error.response);\r\n        setLoading(false);\r\n        setAlertOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const addRequest = async (endpoint: string, requestBody: object) => {\r\n    setLoading(true);\r\n    await addData(endpoint, requestBody)\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        setLoading(false);\r\n        setAlertOpen(true);\r\n        setResponseMessage({\r\n          status: response.data.status,\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        setLoading(false);\r\n        setAlertOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const loadAllData = async (url: string, param: number | string) => {\r\n    setIsLoading(true);\r\n    await getData(url, param)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response.status === \"success\") {\r\n          setData(response.data.result);\r\n        } else {\r\n          return \"error\";\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadSingleData = async (url: string, id: string) => {\r\n    setIsLoading(true);\r\n    await getSingleData(url, id)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response.status === \"success\") {\r\n          setData(response.data.result);\r\n          setObj(response.data.result);\r\n        } else {\r\n          return \"error\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const addFavs = async (url: string, id: string) => {\r\n    setIsLoading(true);\r\n    setOpen(false);\r\n    await addToFav(url, id)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response.status === \"fail\") {\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const updateProfile = async (\r\n    url: string,\r\n    data: any,\r\n    number: string,\r\n    date: any,\r\n    Image: any\r\n  ) => {\r\n    setIsLoading(true);\r\n    var formData = new FormData();\r\n    {\r\n      Image && formData.append(\"image\", Image);\r\n    }\r\n    {\r\n      data.fullName && formData.append(\"firstName\", data.fullName);\r\n    }\r\n    {\r\n      data.gender && formData.append(\"gender\", data.gender);\r\n    }\r\n    {\r\n      data.city && formData.append(\"city\", data.city);\r\n    }\r\n    {\r\n      data.userName && formData.append(\"displayName\", data.userName);\r\n    }\r\n    {\r\n      date && formData.append(\"dateOfBirth\", date);\r\n    }\r\n\r\n    await updateUser(url, formData)\r\n      .then((response) => {\r\n        if (response.status === \"success\") {\r\n          setIsLoading(false);\r\n          console.log(response);\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          console.log(response);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const changePassword = async (url: string, data: any) => {\r\n    setIsLoading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"passwordCurrent\", data.currentPassword);\r\n    formData.append(\"password\", data.newPassword);\r\n    formData.append(\"passwordConfirm\", data.confirmPassword);\r\n\r\n    await updateUser(url, formData)\r\n      .then((response) => {\r\n        if (response.status === \"success\") {\r\n          setIsLoading(false);\r\n          console.log(response);\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          console.log(response);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const removeData = async (url: string, id: string) => {\r\n    setIsLoading(true);\r\n    setOpen(false);\r\n    await deleteData(url, id)\r\n      .then((response) => {\r\n        if (response.status === \"success\") {\r\n          let filteredArray = data.filter((item: any) => item._id !== id);\r\n          setIsLoading(false);\r\n          setData(filteredArray);\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return {\r\n    getAll,\r\n    addRequest,\r\n    loading,\r\n    setLoading,\r\n    alertOpen,\r\n    setAlertOpen,\r\n    responseData,\r\n    setResponseData,\r\n    responseMessage,\r\n    setResponseMessage,\r\n    loadSingleData,\r\n    addFavs,\r\n    loadAllData,\r\n    removeData,\r\n    updateProfile,\r\n    changePassword,\r\n    data,\r\n    setData,\r\n    isLoading,\r\n    open,\r\n    setOpen,\r\n    obj,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\postAd\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carComparision.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\convertDate\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\loginWithMobile.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\endpoints.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\API.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\axiosInstances.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\helperFunctions.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectInputComponent.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\functions\\authMethod.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\functions\\userAuth.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\firebase-config.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\ComparisonContext.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\CategorySection.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\endpoints.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\useStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarInformation.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\Slider.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carDetail.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarDetail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Container.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\actions.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\SellerDetail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Table.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\useStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\TableRows.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedTable.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedRows.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\homePageData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\PostAd\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\PostAd\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Tabs\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Tabs\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Tabs\\tabsPanel.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Slider\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\OptionsCard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Slider\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\OptionsCard\\styles.ts",["563"],"import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Colors } from \"../../Utils/constants/colors/colors\";\r\n\r\nexport interface OptionsCardStylesProps {\r\n  backgroundColor: string;\r\n  backgroundColorSelected: string;\r\n}\r\n\r\nconst { greySix } = Colors;\r\n\r\n/** \r\n @param backgroundColor\r\n @param backgroundColorSelected card background Color after Selection\r\n **/\r\n\r\nconst OptionsCardStyles = makeStyles<Theme, OptionsCardStylesProps>(() => ({\r\n  root: {\r\n    backgroundColor: ({ backgroundColor }) => backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"30px 20px\",\r\n    borderRadius: \"2px\",\r\n    boxShadow: \"none\",\r\n    \"& svg\": {\r\n      maxHeight: \"30px\",\r\n      maxWidth: \"30px\",\r\n      margin: \"10px\",\r\n    },\r\n    \"& > h6\": {\r\n      color: \"grey\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: ({ backgroundColorSelected }) => backgroundColorSelected,\r\n      \"& > h6\": {\r\n        color: \"white\",\r\n      },\r\n      \"& > svg > path\": {\r\n        fill: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default OptionsCardStyles;\r\n",{"ruleId":"564","replacedBy":"565"},{"ruleId":"566","replacedBy":"567"},{"ruleId":"568","severity":1,"message":"569","line":21,"column":8,"nodeType":"570","endLine":21,"endColumn":10,"suggestions":"571"},{"ruleId":"568","severity":1,"message":"572","line":39,"column":6,"nodeType":"570","endLine":39,"endColumn":8,"suggestions":"573"},{"ruleId":"574","severity":1,"message":"575","line":24,"column":30,"nodeType":"576","messageId":"577","endLine":24,"endColumn":46},{"ruleId":"574","severity":1,"message":"578","line":4,"column":10,"nodeType":"576","messageId":"577","endLine":4,"endColumn":19},{"ruleId":"574","severity":1,"message":"579","line":42,"column":5,"nodeType":"576","messageId":"577","endLine":42,"endColumn":17},{"ruleId":"580","severity":1,"message":"581","line":52,"column":23,"nodeType":"582","messageId":"583","endLine":52,"endColumn":25},{"ruleId":"568","severity":1,"message":"584","line":76,"column":6,"nodeType":"570","endLine":76,"endColumn":8,"suggestions":"585"},{"ruleId":"586","severity":1,"message":"587","line":31,"column":9,"nodeType":"588","messageId":"583","endLine":31,"endColumn":11},{"ruleId":"574","severity":1,"message":"575","line":2,"column":31,"nodeType":"576","messageId":"577","endLine":2,"endColumn":47},{"ruleId":"589","severity":1,"message":"590","line":142,"column":5,"nodeType":"591","messageId":"592","endLine":144,"endColumn":6},{"ruleId":"589","severity":1,"message":"590","line":145,"column":5,"nodeType":"591","messageId":"592","endLine":147,"endColumn":6},{"ruleId":"589","severity":1,"message":"590","line":148,"column":5,"nodeType":"591","messageId":"592","endLine":150,"endColumn":6},{"ruleId":"589","severity":1,"message":"590","line":151,"column":5,"nodeType":"591","messageId":"592","endLine":153,"endColumn":6},{"ruleId":"589","severity":1,"message":"590","line":154,"column":5,"nodeType":"591","messageId":"592","endLine":156,"endColumn":6},{"ruleId":"589","severity":1,"message":"590","line":157,"column":5,"nodeType":"591","messageId":"592","endLine":159,"endColumn":6},{"ruleId":"574","severity":1,"message":"593","line":9,"column":9,"nodeType":"576","messageId":"577","endLine":9,"endColumn":16},"no-native-reassign",["594"],"no-negated-in-lhs",["595"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_fId', '_sId', and 'loadAllData'. Either include them or remove the dependency array.","ArrayExpression",["596"],"React Hook useEffect has missing dependencies: 'id' and 'loadSingleData'. Either include them or remove the dependency array.",["597"],"@typescript-eslint/no-unused-vars","'handleGoogleAuth' is defined but never used.","Identifier","unusedVar","'KeyObject' is defined but never used.","'responseData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has missing dependencies: 'CARS', 'appliedFilters', 'getAll', and 'values'. Either include them or remove the dependency array.",["598"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'greySix' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},"Update the dependencies array to be: [_fId, _sId, loadAllData]",{"range":"605","text":"606"},"Update the dependencies array to be: [id, loadSingleData]",{"range":"607","text":"608"},"Update the dependencies array to be: [CARS, appliedFilters, getAll, values]",{"range":"609","text":"610"},[739,741],"[_fId, _sId, loadAllData]",[1165,1167],"[id, loadSingleData]",[2134,2136],"[CARS, appliedFilters, getAll, values]"]