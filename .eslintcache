[{"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\index.tsx":"1","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\store.ts":"2","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\App.tsx":"3","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\rootReducer.ts":"4","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\theme.ts":"5","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\routes.tsx":"6","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\layoutSlice.ts":"7","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\authSlice.ts":"8","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\globalFontSize.ts":"9","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\color.ts":"10","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\colors\\colors.ts":"11","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\privateRoutes.tsx":"12","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\publicRoutes.tsx":"13","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\paths.tsx":"14","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carComparision\\index.tsx":"15","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\SearchUsedCars\\index.tsx":"16","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithMobile.tsx":"17","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithEmail.tsx":"18","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\index.tsx":"19","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carDetail\\index.tsx":"20","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\verificationPage\\index.tsx":"21","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\index.tsx":"22","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\index.tsx":"23","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\globalStyles.ts":"24","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\formsConstants.ts":"25","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\index.tsx":"26","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\index.tsx":"27","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\index.tsx":"28","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\index.tsx":"29","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\home\\index.tsx":"30","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\buttonLabels.ts":"31","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\useForm.ts":"32","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\footerData.ts":"33","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Header.tsx":"34","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\useForm.ts":"35","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\useForm.ts":"36","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\useForm.ts":"37","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\filtersData.ts":"38","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\listingData.ts":"39","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\regex.ts":"40","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\index.tsx":"41","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\FullScreenDialog.tsx":"42","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\index.tsx":"43","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\paths.tsx":"44","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomButton.tsx":"45","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\useStyles.tsx":"46","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\color.constants.tsx":"47","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\Sidebar.tsx":"48","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\useForm.ts":"49","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\addEditCarData.ts":"50","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CustomStepperIcon.tsx":"51","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\useAddEditCar.tsx":"52","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\themeConstants.tsx":"53","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\styles.ts":"54","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\styles.ts":"55","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\HorizontalFilters\\index.tsx":"56","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\index.tsx":"57","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\index.tsx":"58","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\BreadCrumbs\\index.tsx":"59","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\style.tsx":"60","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\sidebarStyles.tsx":"61","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\UploadPhotosForm.tsx":"62","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarInformationForm.tsx":"63","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarAdditionalInformation.tsx":"64","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\Banner.tsx":"65","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\styles.ts":"66","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\styles.ts":"67","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\InputFieldWithButton.tsx":"68","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectComponent.tsx":"69","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\useHooks.tsx":"70","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\bannerStyles.tsx":"71","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\CustomTitle.tsx":"72","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\SearchSelect.tsx":"73","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\index.tsx":"74","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\index.tsx":"75","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\LayoutToggler\\index.tsx":"76","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\index.tsx":"77","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\Size.tsx":"78","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\DialogBox.tsx":"79","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\Breakpoints.tsx":"80","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\selectStyles.tsx":"81","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\styles.ts":"82","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\styles.ts":"83","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\index.tsx":"84","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\ListingBanner\\ListBannerContainer.tsx":"85","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\Text.tsx":"86","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\ListingBannerContext.tsx":"87","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\useStyles.tsx":"88","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\Text.ts":"89","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\index.tsx":"90","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\useStyles.ts":"91","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\dashboard\\index.tsx":"92","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Toast.tsx":"93","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\useApi.ts":"94","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\postAd\\index.tsx":"95","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carComparision.tsx":"96","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\convertDate\\index.tsx":"97","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\helperFunctions.ts":"98","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectInputComponent.tsx":"99","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\endpoints.ts":"100","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carDetail.ts":"101","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\useStyles.ts":"102","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarDetail.tsx":"103","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\Slider.tsx":"104","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarInformation.tsx":"105","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Container.tsx":"106","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\SellerDetail.tsx":"107","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Table.tsx":"108","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\useStyles.ts":"109","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\TableRows.tsx":"110","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedTable.tsx":"111","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedRows.tsx":"112","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\actions.ts":"113","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\ComparisonContext.tsx":"114","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\CategorySection.tsx":"115","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\useStyles.tsx":"116","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\useStyles.tsx":"117","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\shortlistItems\\index.tsx":"118","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\shortlistItems\\useForm.ts":"119","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ShortListCard\\index.tsx":"120"},{"size":360,"mtime":1626090394180,"results":"121","hashOfConfig":"122"},{"size":487,"mtime":1625854514260,"results":"123","hashOfConfig":"122"},{"size":571,"mtime":1628881450051,"results":"124","hashOfConfig":"122"},{"size":254,"mtime":1627125065897,"results":"125","hashOfConfig":"122"},{"size":2100,"mtime":1628686403734,"results":"126","hashOfConfig":"122"},{"size":1069,"mtime":1625854514302,"results":"127","hashOfConfig":"122"},{"size":462,"mtime":1628187206727,"results":"128","hashOfConfig":"122"},{"size":767,"mtime":1628335153167,"results":"129","hashOfConfig":"122"},{"size":952,"mtime":1626451012547,"results":"130","hashOfConfig":"122"},{"size":148,"mtime":1628881450139,"results":"131","hashOfConfig":"122"},{"size":448,"mtime":1628881456544,"results":"132","hashOfConfig":"122"},{"size":796,"mtime":1628881456543,"results":"133","hashOfConfig":"122"},{"size":463,"mtime":1628793600931,"results":"134","hashOfConfig":"122"},{"size":4292,"mtime":1628881518777,"results":"135","hashOfConfig":"122"},{"size":1184,"mtime":1628881456540,"results":"136","hashOfConfig":"122"},{"size":223,"mtime":1628335153155,"results":"137","hashOfConfig":"122"},{"size":3972,"mtime":1628881450085,"results":"138","hashOfConfig":"122"},{"size":3968,"mtime":1628881450084,"results":"139","hashOfConfig":"122"},{"size":946,"mtime":1628881450066,"results":"140","hashOfConfig":"122"},{"size":3388,"mtime":1628881456541,"results":"141","hashOfConfig":"122"},{"size":253,"mtime":1628881450098,"results":"142","hashOfConfig":"122"},{"size":2779,"mtime":1628866541358,"results":"143","hashOfConfig":"122"},{"size":2324,"mtime":1628881450086,"results":"144","hashOfConfig":"122"},{"size":1019,"mtime":1628187206548,"results":"145","hashOfConfig":"122"},{"size":785,"mtime":1628686403637,"results":"146","hashOfConfig":"122"},{"size":2386,"mtime":1628881450077,"results":"147","hashOfConfig":"122"},{"size":2629,"mtime":1628881450072,"results":"148","hashOfConfig":"122"},{"size":6672,"mtime":1628881450070,"results":"149","hashOfConfig":"122"},{"size":3660,"mtime":1628881450075,"results":"150","hashOfConfig":"122"},{"size":688,"mtime":1628881456542,"results":"151","hashOfConfig":"122"},{"size":1613,"mtime":1628881450142,"results":"152","hashOfConfig":"122"},{"size":2360,"mtime":1628881450094,"results":"153","hashOfConfig":"122"},{"size":2474,"mtime":1626086088388,"results":"154","hashOfConfig":"122"},{"size":2273,"mtime":1628335152983,"results":"155","hashOfConfig":"122"},{"size":1927,"mtime":1628881450073,"results":"156","hashOfConfig":"122"},{"size":2030,"mtime":1628881450076,"results":"157","hashOfConfig":"122"},{"size":3638,"mtime":1628881450071,"results":"158","hashOfConfig":"122"},{"size":2170,"mtime":1628716298423,"results":"159","hashOfConfig":"122"},{"size":1775,"mtime":1628881450053,"results":"160","hashOfConfig":"122"},{"size":939,"mtime":1628187206268,"results":"161","hashOfConfig":"122"},{"size":894,"mtime":1628187206298,"results":"162","hashOfConfig":"122"},{"size":2164,"mtime":1628187206285,"results":"163","hashOfConfig":"122"},{"size":7209,"mtime":1628187206744,"results":"164","hashOfConfig":"122"},{"size":280,"mtime":1628335152989,"results":"165","hashOfConfig":"122"},{"size":1160,"mtime":1628791338047,"results":"166","hashOfConfig":"122"},{"size":1587,"mtime":1628335152990,"results":"167","hashOfConfig":"122"},{"size":459,"mtime":1628791338074,"results":"168","hashOfConfig":"122"},{"size":1892,"mtime":1628335152985,"results":"169","hashOfConfig":"122"},{"size":1963,"mtime":1628881450078,"results":"170","hashOfConfig":"122"},{"size":2833,"mtime":1628866541233,"results":"171","hashOfConfig":"122"},{"size":1746,"mtime":1628866541355,"results":"172","hashOfConfig":"122"},{"size":6620,"mtime":1628866541364,"results":"173","hashOfConfig":"122"},{"size":513,"mtime":1628088100901,"results":"174","hashOfConfig":"122"},{"size":642,"mtime":1628881450056,"results":"175","hashOfConfig":"122"},{"size":1186,"mtime":1628187206855,"results":"176","hashOfConfig":"122"},{"size":1568,"mtime":1628881450136,"results":"177","hashOfConfig":"122"},{"size":24690,"mtime":1628881450138,"results":"178","hashOfConfig":"122"},{"size":5625,"mtime":1628881450058,"results":"179","hashOfConfig":"122"},{"size":1748,"mtime":1628187206282,"results":"180","hashOfConfig":"122"},{"size":786,"mtime":1628881450054,"results":"181","hashOfConfig":"122"},{"size":910,"mtime":1628335152988,"results":"182","hashOfConfig":"122"},{"size":3566,"mtime":1628102929322,"results":"183","hashOfConfig":"122"},{"size":5823,"mtime":1628866541352,"results":"184","hashOfConfig":"122"},{"size":5784,"mtime":1628866541352,"results":"185","hashOfConfig":"122"},{"size":2831,"mtime":1628881456489,"results":"186","hashOfConfig":"122"},{"size":1784,"mtime":1628187206529,"results":"187","hashOfConfig":"122"},{"size":143,"mtime":1628187206943,"results":"188","hashOfConfig":"122"},{"size":1559,"mtime":1628187206297,"results":"189","hashOfConfig":"122"},{"size":471,"mtime":1628088100654,"results":"190","hashOfConfig":"122"},{"size":361,"mtime":1628791338058,"results":"191","hashOfConfig":"122"},{"size":775,"mtime":1628335152981,"results":"192","hashOfConfig":"122"},{"size":1229,"mtime":1628335152898,"results":"193","hashOfConfig":"122"},{"size":3636,"mtime":1628791338051,"results":"194","hashOfConfig":"122"},{"size":824,"mtime":1628187206287,"results":"195","hashOfConfig":"122"},{"size":849,"mtime":1628187206276,"results":"196","hashOfConfig":"122"},{"size":1317,"mtime":1628187206473,"results":"197","hashOfConfig":"122"},{"size":1102,"mtime":1628187206289,"results":"198","hashOfConfig":"122"},{"size":256,"mtime":1628335152901,"results":"199","hashOfConfig":"122"},{"size":1038,"mtime":1628187206284,"results":"200","hashOfConfig":"122"},{"size":249,"mtime":1628088100634,"results":"201","hashOfConfig":"122"},{"size":1454,"mtime":1628791338052,"results":"202","hashOfConfig":"122"},{"size":515,"mtime":1628187206294,"results":"203","hashOfConfig":"122"},{"size":178,"mtime":1628187206280,"results":"204","hashOfConfig":"122"},{"size":604,"mtime":1628335152917,"results":"205","hashOfConfig":"122"},{"size":607,"mtime":1628335152992,"results":"206","hashOfConfig":"122"},{"size":1903,"mtime":1628791338073,"results":"207","hashOfConfig":"122"},{"size":1441,"mtime":1628791338049,"results":"208","hashOfConfig":"122"},{"size":1151,"mtime":1628791338050,"results":"209","hashOfConfig":"122"},{"size":1487,"mtime":1628791338266,"results":"210","hashOfConfig":"122"},{"size":2269,"mtime":1628791338059,"results":"211","hashOfConfig":"122"},{"size":1202,"mtime":1628791338061,"results":"212","hashOfConfig":"122"},{"size":319,"mtime":1628791338089,"results":"213","hashOfConfig":"122"},{"size":657,"mtime":1628881450060,"results":"214","hashOfConfig":"122"},{"size":5628,"mtime":1628881456487,"results":"215","hashOfConfig":"122"},{"size":436,"mtime":1628791338091,"results":"216","hashOfConfig":"122"},{"size":484,"mtime":1628881456504,"results":"217","hashOfConfig":"122"},{"size":211,"mtime":1628791338055,"results":"218","hashOfConfig":"122"},{"size":293,"mtime":1628866541235,"results":"219","hashOfConfig":"122"},{"size":1925,"mtime":1628866541355,"results":"220","hashOfConfig":"122"},{"size":614,"mtime":1628881456487,"results":"221","hashOfConfig":"122"},{"size":2705,"mtime":1628881456505,"results":"222","hashOfConfig":"122"},{"size":4006,"mtime":1628881456493,"results":"223","hashOfConfig":"122"},{"size":4122,"mtime":1628881456490,"results":"224","hashOfConfig":"122"},{"size":3982,"mtime":1628881456492,"results":"225","hashOfConfig":"122"},{"size":3184,"mtime":1628881456491,"results":"226","hashOfConfig":"122"},{"size":1046,"mtime":1628881456501,"results":"227","hashOfConfig":"122"},{"size":487,"mtime":1628881456492,"results":"228","hashOfConfig":"122"},{"size":2015,"mtime":1628881456501,"results":"229","hashOfConfig":"122"},{"size":1074,"mtime":1628881456503,"results":"230","hashOfConfig":"122"},{"size":2233,"mtime":1628881456502,"results":"231","hashOfConfig":"122"},{"size":1224,"mtime":1628881456500,"results":"232","hashOfConfig":"122"},{"size":2254,"mtime":1628881456499,"results":"233","hashOfConfig":"122"},{"size":1866,"mtime":1628881456486,"results":"234","hashOfConfig":"122"},{"size":4200,"mtime":1628881456495,"results":"235","hashOfConfig":"122"},{"size":2040,"mtime":1628881456496,"results":"236","hashOfConfig":"122"},{"size":665,"mtime":1628881456497,"results":"237","hashOfConfig":"122"},{"size":1325,"mtime":1628881456495,"results":"238","hashOfConfig":"122"},{"size":8290,"mtime":1628881450082,"results":"239","hashOfConfig":"122"},{"size":4160,"mtime":1628881450083,"results":"240","hashOfConfig":"122"},{"size":1235,"mtime":1628881450060,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},"og5drl",{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491"},"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\index.tsx",[],["492","493"],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\store.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\App.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\theme.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\routes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\layoutSlice.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\authSlice.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\globalFontSize.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\color.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\colors\\colors.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\privateRoutes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\publicRoutes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\paths.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carComparision\\index.tsx",["494"],"import Table from \"../../layout/Sections/Sections/Table/Container\"\r\nimport {Grid} from \"@material-ui/core\"\r\nimport Section from '../../components/index'\r\nimport useApi from \"../../Utils/hooks/useApi\";\r\nimport { compareCars } from \"../../Utils/hooks/endpoints\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Colors} from \"../../Utils/constants/colors/colors\"\r\n\r\ninterface RouterProps {\r\n    _fId: string;\r\n    _sId: string;\r\n  }\r\n\r\nconst CarComparision = () => {\r\n    const { loadAllData, data, isLoading } = useApi();\r\n    const { _fId, _sId } = useParams<RouterProps>();\r\n    const {iceBlue} = Colors\r\n    useEffect(() => {\r\n      loadAllData(compareCars, `_id=${_fId}&_id=${_sId}`);\r\n    }, []);\r\n    return (\r\n      <Grid container style={{marginTop: \"50px\",display: \"flex\",justifyContent: \"center\"}}>\r\n      {isLoading || data.length === 0 ? (\r\n        <h1>Loading..</h1>\r\n      ) : (\r\n           <Grid style={{marginBottom: \"80px\"}} item xs={12}>\r\n           <Section backColor={iceBlue} >\r\n            <Table data={data}  />\r\n            </Section>\r\n           </Grid>)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CarComparision\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\SearchUsedCars\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithMobile.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithEmail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carDetail\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\verificationPage\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\globalStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\formsConstants.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\home\\index.tsx",["495"],"import Banner from \"../../layout/Sections/Sections/Banner/Banner\";\r\nimport CategorySection from \"../../layout/Sections/Sections/HomeSections/Category/CategorySection\";\r\nimport ComparisonContext from \"../../layout/Sections/Sections/HomeSections/CarComparison/ComparisonContext\";\r\nimport {Data,Title,subTitle,filter,category,carModel,priceRange} from \"../../Utils/constants/language/Text\"\r\n\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <Banner Title={Title} subTitle={subTitle} category={category}  filter={filter} range={priceRange} carModel={carModel}  />\r\n      <CategorySection  data={Data} />\r\n      <ComparisonContext/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\buttonLabels.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\footerData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Header.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\useForm.ts",["496"],"import { useState } from \"react\";\r\nimport { messages, fieldNames } from \"../../Utils/constants/formsConstants\";\r\nimport { isEmailValid } from \"../../Utils/regex\";\r\n\r\nconst initialValues: any = {\r\n  email: \"\",\r\n};\r\n\r\nexport const useForm = (validateOnChange = false) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(initialValues);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n  const [resetLinkMessage, setResetLinkMessage] = useState(\"\");\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    if (fieldNames.email in fieldValues) {\r\n      temp.email =\r\n        fieldValues.email.trim() === \"\"\r\n          ? messages.isRequired\r\n          : isEmailValid(fieldValues.email)\r\n          ? \"\"\r\n          : messages.notValid;\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"btn clicked\", values);\r\n    if (validate()) {\r\n      setIsLoading(true);\r\n      console.log(values);\r\n      let requestBody = {\r\n        email: values.email,\r\n      };\r\n      console.log(\"request body,\", requestBody);\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n    validate,\r\n    handleSubmit,\r\n    isLoading,\r\n    resetLinkMessage,\r\n    responseMessage,\r\n    setResetLinkMessage,\r\n  };\r\n};\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\useForm.ts",["497","498"],"import React, { useState, useEffect } from \"react\";\r\nimport { fieldNames, messages } from \"../../Utils/constants/formsConstants\";\r\n\r\nconst initialValues: any = {\r\n  keywords: \"\",\r\n  priceFrom: 0,\r\n  priceTo: 0,\r\n  priceRange: [0, 50000000],\r\n  yearFrom: 0,\r\n  yearTo: 0,\r\n  yearRange: [1900, 2021],\r\n  province: [],\r\n  city: [],\r\n  mileageFrom: 0,\r\n  mileageTo: 0,\r\n  registrationCity: [],\r\n  mileageRange: [0, 1000000],\r\n  transmission: [],\r\n  engineType: [],\r\n  engineCapacityFrom: 0,\r\n  engineCapacityTo: 0,\r\n  engineCapacityRange: [600, 30000],\r\n  color: [],\r\n  bodyType: [],\r\n  pictireAvailability: false,\r\n  videoAvailability: false,\r\n  sellerType: [],\r\n  adType: [],\r\n  sortingOptions: \"\",\r\n};\r\n\r\nexport const useForm = (validateOnChange = true) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(initialValues);\r\n  const [appliedFilters, setAppliedFilters] = useState<any>([]);\r\n  // const [responseMessage, setResponseMessage] = useState(\"\");\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.info(\"APPLIED FILTERS\", appliedFilters);\r\n  }, [appliedFilters]);\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n    if (values[name] !== value) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    filterName: string\r\n  ) => {\r\n    let temp = values[filterName];\r\n    if (e.target.checked) {\r\n      temp.push(e.target.name);\r\n    } else {\r\n      temp = temp.filter((item: string) => item !== e.target.name);\r\n    }\r\n    setValues({ ...values, [filterName]: temp });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(filterName)) {\r\n        setAppliedFilters([...appliedFilters, filterName]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(filterName);\r\n    }\r\n  };\r\n\r\n  const handleSingleCheckBoxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, checked } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: checked,\r\n    });\r\n    if (validateOnChange) validate({ [name]: checked });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(name);\r\n    }\r\n  };\r\n\r\n  const removeFilter = (filterName: string) => {\r\n    setAppliedFilters(\r\n      appliedFilters.filter((filter: string) => filter !== filterName)\r\n    );\r\n    setValues((values: any) => {\r\n      values[filterName] = initialValues[filterName];\r\n      return { ...values };\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"btn clicked\", values);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    setAppliedFilters,\r\n    removeFilter,\r\n    resetForm,\r\n    validate,\r\n    handleSubmit,\r\n    // isLoading,\r\n    // responseMessage,\r\n  };\r\n};\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\filtersData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\listingData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\regex.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\FullScreenDialog.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\paths.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomButton.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\color.constants.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\useForm.ts",["499"],"import { useState } from \"react\";\r\nimport { fieldNames, messages } from \"../../Utils/constants/formsConstants\";\r\n\r\nconst initialValues: any = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nexport const useForm = (token: any, validateOnChange = false) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(initialValues);\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    if (fieldNames.password in fieldValues) {\r\n      temp.password = fieldValues.password.length < 5 ? messages.password : \"\";\r\n    }\r\n    if (fieldNames.confirmPassword in fieldValues) {\r\n      temp.confirmPassword =\r\n        fieldValues.confirmPassword !== fieldValues.password\r\n          ? messages.notMatch\r\n          : \"\";\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"btn clicked\", values);\r\n    if (validate()) {\r\n      setIsLoading(true);\r\n      console.log(values, token);\r\n      let requestBody = {\r\n        password: values.password,\r\n        passwordConfirm: values.confirmPassword,\r\n      };\r\n      console.log(\"request Body\", requestBody);\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n    validate,\r\n    handleSubmit,\r\n    isLoading,\r\n    responseMessage,\r\n  };\r\n};\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\addEditCarData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CustomStepperIcon.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\useAddEditCar.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\themeConstants.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\HorizontalFilters\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\index.tsx",["500"],"import { useForm } from \"../../pages/carsListing/useForm\";\r\nimport {\r\n  Grid,\r\n  Slider,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FilterAccordion from \"../../components/Accordion\";\r\nimport {\r\n  Carfilters,\r\n  CarFiltersData,\r\n} from \"../../Utils/constants/language/en/filtersData\";\r\nimport { City, State } from \"country-state-city\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport InputFieldWithButton from \"../../components/InputField/InputFieldWithButton\";\r\nimport InputField from \"../../components/InputField\";\r\nimport { fieldNames } from \"../../Utils/constants/formsConstants\";\r\nimport VerticalFilterStyles from \"./styles\";\r\nimport DialogBox from \"../../components/DialogBox\";\r\nimport { useState } from \"react\";\r\nimport { ICity } from \"country-state-city/dist/lib/interface\";\r\nimport { APPLIED_FILTERS } from \"../../Utils/constants/language/en/buttonLabels\";\r\n\r\nexport interface CarFiltersProps {}\r\n\r\nconst CarFilters: React.FC<CarFiltersProps> = () => {\r\n  const [searchResult, setSearchResult] = useState<ICity[]>();\r\n  const {} = VerticalFilterStyles();\r\n  const {\r\n    KEYWORDS,\r\n    PRICE_RANGE,\r\n    YEAR,\r\n    MAKE,\r\n    PROVINCE,\r\n    CITY,\r\n    REGISTRATION_CITY,\r\n    MILEAGE,\r\n    TRANSMISSION,\r\n    ENGINE_TYPE,\r\n    ENGINE_CAPACITY,\r\n    COLOR,\r\n    BODY_TYPE,\r\n    PICTURE_AVAILABILITY,\r\n    VIDEO_AVAILABILITY,\r\n    SELLER_TYPE,\r\n    AD_TYPE\r\n  } = CarFiltersData;\r\n\r\n  const majorCities = [\"Karachi\", \"Islamabad\", \"Lahore\", \"Peshawar\", \"Quetta\"];\r\n  const mainCarTypes = [\"Sedan\", \"Hatchback\", \"Pick Up\"];\r\n  const mainColors = [\"Black\", \"White\", \"Red\"];\r\n  const cities = City.getCitiesOfCountry(\"PK\");\r\n  const provinces = State.getStatesOfCountry(\"PK\");\r\n  const extractedCityNames = cities?.map((item) => item.name);\r\n  let cityNames = [];\r\n  if (extractedCityNames) {\r\n    cityNames.push(...extractedCityNames);\r\n  }\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    removeFilter,\r\n    handleSubmit,\r\n  } = useForm(true);\r\n\r\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let result = City.getCitiesOfCountry(\"PK\")?.filter(\r\n      (city: ICity) =>\r\n        city.name.substr(0, e.target.value.length).toLowerCase() ===\r\n        e.target.value.toLowerCase()\r\n    );\r\n    if (e.target.value === \"\") {\r\n      result = [];\r\n    }\r\n    setSearchResult(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {appliedFilters.length > 0 && (\r\n        <FilterAccordion title={APPLIED_FILTERS}>\r\n          <Grid container spacing={1}>\r\n            {appliedFilters.map((filter: any) => (\r\n              <Grid\r\n                key={`filter-${filter}`}\r\n                item\r\n                container\r\n                justifyContent=\"space-between\"\r\n                xs={12}\r\n              >\r\n                <Typography variant=\"body2\">{filter}</Typography>\r\n                <IconButton size=\"small\" onClick={() => removeFilter(filter)}>\r\n                  <HighlightOffRoundedIcon color=\"secondary\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </FilterAccordion>\r\n      )}\r\n      <FilterAccordion title={KEYWORDS}>\r\n        <InputFieldWithButton\r\n          name={fieldNames.keywords}\r\n          label=\"Keywords\"\r\n          placeholder=\"Eg. Honda In Lahore\"\r\n          value={values.keywords}\r\n          error={errors.keywords}\r\n          onChange={handleInputChange}\r\n          handleClick={handleSubmit}\r\n        />\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PRICE_RANGE}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item container spacing={1}>\r\n            <Grid item xs={5}>\r\n              <InputField\r\n                name={fieldNames.priceFrom}\r\n                label=\"From\"\r\n                value={values.priceRange[0]}\r\n                error={errors.priceFrom}\r\n                onChange={(e: any) => {\r\n                  setValues((previousState: any) => {\r\n                    previousState.priceRange[0] = e.target.value;\r\n                    return { ...previousState };\r\n                  });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <InputFieldWithButton\r\n                name={fieldNames.priceTo}\r\n                label=\"To\"\r\n                value={values.priceRange[1]}\r\n                error={errors.priceTo}\r\n                onChange={(e: any) => {\r\n                  setValues((previousState: any) => {\r\n                    previousState.priceRange[1] = e.target.value;\r\n                    return { ...previousState };\r\n                  });\r\n                }}\r\n                handleClick={handleSubmit}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Slider\r\n              value={[values.priceRange[0], values.priceRange[1]]}\r\n              min={50000}\r\n              max={5000000}\r\n              onChange={(event: any, newValue: number | number[]) => {\r\n                setValues((previousState: any) => {\r\n                  console.log(newValue);\r\n                  previousState.priceRange = newValue as number[];\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={YEAR}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.yearFrom}\r\n              label=\"From\"\r\n              value={values.yearRange[0]}\r\n              error={errors.yearFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.priceRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.yearTo}\r\n              label=\"To\"\r\n              value={values.yearRange[1]}\r\n              error={errors.yearTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.priceRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={MAKE}>\r\n        <InputField label=\"Eg. Honda In Lahore\" />\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PROVINCE}>\r\n        <FormGroup>\r\n          {provinces.map((province) => (\r\n            <FormControlLabel\r\n              key={`province-${province.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.province.indexOf(province.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"province\")}\r\n                  name={province.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={province.name}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={CITY}>\r\n        <FormGroup>\r\n          {cityNames\r\n            .filter((item) => majorCities.includes(item))\r\n            .map((city) => (\r\n              <FormControlLabel\r\n                key={`city-${city}`}\r\n                control={\r\n                  <Checkbox\r\n                    checked={values.city.indexOf(city) > -1}\r\n                    onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                    name={city}\r\n                    color=\"secondary\"\r\n                  />\r\n                }\r\n                label={city}\r\n              />\r\n            ))}\r\n          <DialogBox title=\"Select Cities\">\r\n            <Grid style={{ display: \"flex\" }} container>\r\n              <Grid xs={12}>\r\n                <InputField\r\n                  variant=\"filled\"\r\n                  label=\"Search\"\r\n                  onChange={handleSearchInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  {\"Search Result\"}\r\n                </Typography>\r\n                {searchResult &&\r\n                  searchResult.map((city: ICity) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Grid>\r\n              {provinces.map((province) => (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {province.name}\r\n                  </Typography>\r\n                  {City.getCitiesOfState(\r\n                    province.countryCode,\r\n                    province.isoCode\r\n                  ).map((city) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={REGISTRATION_CITY}>\r\n        <FormGroup>\r\n          {cityNames\r\n            .filter((item) => majorCities.includes(item))\r\n            .map((city) => (\r\n              <FormControlLabel\r\n                key={`city-${city}`}\r\n                control={\r\n                  <Checkbox\r\n                    checked={values.registrationCity.indexOf(city) > -1}\r\n                    onChange={(e) =>\r\n                      handleCheckboxChange(e, \"registrationCity\")\r\n                    }\r\n                    name={city}\r\n                    color=\"secondary\"\r\n                  />\r\n                }\r\n                label={city}\r\n              />\r\n            ))}\r\n\r\n          <DialogBox title=\"Select Cities\">\r\n            <Grid style={{ display: \"flex\" }} container>\r\n              {provinces.map((province) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {province.name}\r\n                  </Typography>\r\n                  {City.getCitiesOfState(\r\n                    province.countryCode,\r\n                    province.isoCode\r\n                  ).map((city) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={MILEAGE}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.mileageFrom}\r\n              label=\"From\"\r\n              value={values.mileageRange[0]}\r\n              error={errors.mileageFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.mileageTo}\r\n              label=\"To\"\r\n              value={values.mileageRange[1]}\r\n              error={errors.mileageTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={TRANSMISSION}>\r\n        <FormGroup>\r\n          {Carfilters.TRANSMISSION.map((type) => (\r\n            <FormControlLabel\r\n              key={`transmission-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.transmission.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"transmission\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={ENGINE_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.ENGINE_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`engine-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.engineType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"engineType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={ENGINE_CAPACITY}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.engineCapacityFrom}\r\n              label=\"From\"\r\n              value={values.engineCapacityRange[0]}\r\n              error={errors.engineCapacityFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.engineCapacityTo}\r\n              label=\"To\"\r\n              value={values.engineCapacityRange[1]}\r\n              error={errors.engineCapacityTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={COLOR}>\r\n        <FormGroup>\r\n          {Carfilters.COLOR.filter((item) =>\r\n            mainColors.includes(item.name)\r\n          ).map((type) => (\r\n            <FormControlLabel\r\n              key={`color-type-${type.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.color.indexOf(type.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                  name={type.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <div style={{ display: \"flex\" }}>\r\n                  <span\r\n                    style={{\r\n                      borderRadius: \"50%\",\r\n                      maxWidth: \"20px\",\r\n                      maxHeight: \"20px\",\r\n                      minWidth: \"20px\",\r\n                      minHeight: \"20px\",\r\n                      backgroundColor: type.hex,\r\n                      border: \"0.2px solid grey\",\r\n                      marginRight: \"7px\",\r\n                    }}\r\n                  />\r\n                  <Typography>{type.name}</Typography>\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n          <FormControlLabel\r\n            key={`color-type-other`}\r\n            control={\r\n              <Checkbox\r\n                checked={values.color.indexOf(\"Other\") > -1}\r\n                onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                name=\"Other\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={\r\n              <div style={{ display: \"flex\" }}>\r\n                <Typography>Other Colors</Typography>\r\n              </div>\r\n            }\r\n          />\r\n\r\n          <DialogBox title=\"Select Color\">\r\n            <Grid container spacing={2}>\r\n              {Carfilters.COLOR.map((type) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControlLabel\r\n                    key={`color-type-${type.name}`}\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.color.indexOf(type.name) > -1}\r\n                        onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                        name={type.name}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <span\r\n                          style={{\r\n                            borderRadius: \"50%\",\r\n                            maxWidth: \"20px\",\r\n                            maxHeight: \"20px\",\r\n                            minWidth: \"20px\",\r\n                            minHeight: \"20px\",\r\n                            backgroundColor: type.hex,\r\n                            border: \"0.2px solid grey\",\r\n                            marginRight: \"7px\",\r\n                          }}\r\n                        />\r\n                        <Typography>{type.name}</Typography>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  key={`color-type-other`}\r\n                  control={\r\n                    <Checkbox\r\n                      checked={values.color.indexOf(\"Other\") > -1}\r\n                      onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                      name=\"Other\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                    />\r\n                  }\r\n                  label={\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <Typography>Other Colors</Typography>\r\n                    </div>\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={BODY_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.BODY_TYPE.filter((item) =>\r\n            mainCarTypes.includes(item.name)\r\n          ).map((type) => (\r\n            <FormControlLabel\r\n              key={`body-type-${type.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.bodyType.indexOf(type.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"bodyType\")}\r\n                  name={type.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <div style={{ display: \"flex\" }}>\r\n                  <img\r\n                    width=\"60px\"\r\n                    style={{ margin: \"0 10px\" }}\r\n                    src={type.icon}\r\n                    alt={type.name}\r\n                  />\r\n                  <Typography>{type.name}</Typography>\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n\r\n          <DialogBox title=\"Select Body Type\">\r\n            <Grid container spacing={2}>\r\n              {Carfilters.BODY_TYPE.map((type) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControlLabel\r\n                    key={`body-type-${type.name}`}\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.bodyType.indexOf(type.name) > -1}\r\n                        onChange={(e) => handleCheckboxChange(e, \"bodyType\")}\r\n                        name={type.name}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <img\r\n                          width=\"60px\"\r\n                          style={{ margin: \"0 10px\" }}\r\n                          src={type.icon}\r\n                          alt={type.name}\r\n                        />\r\n                        <Typography>{type.name}</Typography>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PICTURE_AVAILABILITY}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.withPicture}\r\n                onChange={handleSingleCheckBoxChange}\r\n                name={fieldNames.pictureAvailability}\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={Carfilters.PICTURE_AVAILABILITY[0]}\r\n          />\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={VIDEO_AVAILABILITY}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.withVideo}\r\n                onChange={handleSingleCheckBoxChange}\r\n                name={fieldNames.videoAvailability}\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={Carfilters.VIDEO_AVAILABILITY[0]}\r\n          />\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={SELLER_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.SELLER_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`seller-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.sellerType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"sellerType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={AD_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.AD_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`ad-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.adType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"adType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarFilters;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\BreadCrumbs\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\style.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\sidebarStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\UploadPhotosForm.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarInformationForm.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarAdditionalInformation.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\Banner.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\InputFieldWithButton.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectComponent.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\useHooks.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\bannerStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\CustomTitle.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\SearchSelect.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\LayoutToggler\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\Size.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\DialogBox.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\Breakpoints.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\selectStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\ListingBanner\\ListBannerContainer.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\Text.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\ListingBannerContext.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\Text.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\useStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\dashboard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Toast.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\useApi.ts",["501","502","503","504","505","506","507"],"import { useState } from \"react\";\r\nimport {\r\n  getData,\r\n  getSingleData,\r\n  addToFav,\r\n  deleteData,\r\n  updateUser,\r\n} from \"./actions\";\r\nimport { ICarCard } from \"../../layout/Sections/Utils/types\";\r\nconst useApi = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [obj, setObj] = useState<ICarCard>();\r\n  const [open, setOpen] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState({\r\n    status: \"\",\r\n    message: \"\",\r\n  });\r\n  const loadAllData = async (url: string,param: number | string) => {\r\n    setIsLoading(true);\r\n    await getData(url,param)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response.status === \"success\") {\r\n          setData(response.data.result);\r\n        } else {\r\n          return \"error\";\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadSingleData = async (url: string, id: string) => {\r\n    setIsLoading(true);\r\n    await getSingleData(url, id)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response.status === \"success\") {\r\n          setData(response.data.result);\r\n          setObj(response.data.result);\r\n        } else {\r\n          return \"error\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const addFavs = async (url: string, id: string) => {\r\n    setIsLoading(true);\r\n    setOpen(false);\r\n    await addToFav(url, id)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response.status === \"fail\") {\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const updateProfile = async (\r\n    url: string,\r\n    data: any,\r\n    number: string,\r\n    date: any,\r\n    Image: any\r\n  ) => {\r\n    setIsLoading(true);\r\n    var formData = new FormData();\r\n    {\r\n      Image && formData.append(\"image\", Image);\r\n    }\r\n    {\r\n      data.fullName && formData.append(\"firstName\", data.fullName);\r\n    }\r\n    {\r\n      data.gender && formData.append(\"gender\", data.gender);\r\n    }\r\n    {\r\n      data.city && formData.append(\"city\", data.city);\r\n    }\r\n    {\r\n      data.userName && formData.append(\"displayName\", data.userName);\r\n    }\r\n    {\r\n      date && formData.append(\"dateOfBirth\", date);\r\n    }\r\n\r\n    await updateUser(url, formData)\r\n      .then((response) => {\r\n        if (response.status === \"success\") {\r\n          setIsLoading(false);\r\n          console.log(response);\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          console.log(response);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const changePassword = async (url: string, data: any) => {\r\n    setIsLoading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"passwordCurrent\", data.currentPassword);\r\n    formData.append(\"password\", data.newPassword);\r\n    formData.append(\"passwordConfirm\", data.confirmPassword);\r\n\r\n    await updateUser(url, formData)\r\n      .then((response) => {\r\n        if (response.status === \"success\") {\r\n          setIsLoading(false);\r\n          console.log(response);\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          console.log(response);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const removeData = async (url: string, id: string) => {\r\n    setIsLoading(true);\r\n    setOpen(false);\r\n    await deleteData(url, id)\r\n      .then((response) => {\r\n        if (response.status === \"success\") {\r\n          let filteredArray = data.filter((item: any) => item._id !== id);\r\n          setIsLoading(false);\r\n          setData(filteredArray);\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"success\",\r\n            message: response.message,\r\n          });\r\n        } else {\r\n          setOpen(true);\r\n          setResponseMessage({\r\n            status: \"error\",\r\n            message: response.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(true);\r\n        setResponseMessage({\r\n          status: \"error\",\r\n          message: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return {\r\n    loadSingleData,\r\n    addFavs,\r\n    loadAllData,\r\n    removeData,\r\n    updateProfile,\r\n    changePassword,\r\n    data,\r\n    setData,\r\n    isLoading,\r\n    setResponseMessage,\r\n    responseMessage,\r\n    open,\r\n    setOpen,\r\n    obj\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\postAd\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carComparision.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\convertDate\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\helperFunctions.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectInputComponent.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\endpoints.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\carDetail.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\useStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarDetail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\Slider.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\CarInformation.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Container.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\CarDetail\\SellerDetail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\Table.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\useStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\TableRows.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedTable.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Table\\CollapsedTable\\CollapsedRows.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\actions.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\ComparisonContext.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\CategorySection.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\Category\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\HomeSections\\CarComparison\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\shortlistItems\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\shortlistItems\\useForm.ts",["508","509"],"import React, { useState, useEffect } from \"react\";\r\nimport { fieldNames, messages } from \"../../Utils/constants/formsConstants\";\r\nimport { ICarData } from \"../../Utils/constants/language/en/listingData\";\r\n\r\nconst initialValues: any = {\r\n  keywords: \"\",\r\n  priceFrom: 0,\r\n  priceTo: 0,\r\n  priceRange: [0, 50000000],\r\n  yearFrom: 0,\r\n  yearTo: 0,\r\n  yearRange: [1900, 2021],\r\n  province: [],\r\n  city: [],\r\n  mileageFrom: 0,\r\n  mileageTo: 0,\r\n  registrationCity: [],\r\n  mileageRange: [0, 1000000],\r\n  transmission: [],\r\n  engineType: [],\r\n  engineCapacityFrom: 0,\r\n  engineCapacityTo: 0,\r\n  engineCapacityRange: [600, 30000],\r\n  color: [],\r\n  bodyType: [],\r\n  pictireAvailability: false,\r\n  videoAvailability: false,\r\n  sellerType: [],\r\n  adType: [],\r\n  sortingOptions: \"\",\r\n};\r\n\r\nexport const useForm = (validateOnChange = true) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(initialValues);\r\n  const [appliedFilters, setAppliedFilters] = useState<any>([]);\r\n  const [shortListItems, setShortListItems] = useState<ICarData[]>([]);\r\n\r\n  useEffect(() => {\r\n    console.info(\"APPLIED FILTERS\", appliedFilters);\r\n  }, [appliedFilters]);\r\n\r\n  useEffect(() => {\r\n    console.info(\"SHORTLIST ITEMS\", shortListItems);\r\n  }, [shortListItems]);\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n    if (values[name] !== value) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    filterName: string\r\n  ) => {\r\n    let temp = values[filterName];\r\n    if (e.target.checked) {\r\n      temp.push(e.target.name);\r\n    } else {\r\n      temp = temp.filter((item: string) => item !== e.target.name);\r\n    }\r\n    setValues({ ...values, [filterName]: temp });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(filterName)) {\r\n        setAppliedFilters([...appliedFilters, filterName]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(filterName);\r\n    }\r\n  };\r\n\r\n  const handleSingleCheckBoxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, checked } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: checked,\r\n    });\r\n    if (validateOnChange) validate({ [name]: checked });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(name);\r\n    }\r\n  };\r\n\r\n  const removeFilter = (filterName: string) => {\r\n    setAppliedFilters(\r\n      appliedFilters.filter((filter: string) => filter !== filterName)\r\n    );\r\n    setValues((values: any) => {\r\n      values[filterName] = initialValues[filterName];\r\n      return { ...values };\r\n    });\r\n  };\r\n\r\n  const shortListItem = (newItem: ICarData) => {\r\n    if (shortListItems.length < 2) {\r\n      setShortListItems([...shortListItems, newItem]);\r\n    }\r\n  };\r\n\r\n  const removeShortListItem = (itemId: string) => {\r\n    let newItems = shortListItems;\r\n    newItems = newItems.filter((item: ICarData) => item.product._id !== itemId);\r\n    setShortListItems(newItems);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"btn clicked\", values);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    setAppliedFilters,\r\n    removeFilter,\r\n    shortListItems,\r\n    shortListItem,\r\n    removeShortListItem,\r\n    resetForm,\r\n    validate,\r\n    handleSubmit,\r\n  };\r\n};\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ShortListCard\\index.tsx",["510"],"import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\r\n\r\nexport interface ShortListCardProps {\r\n  _id: string;\r\n  name: string;\r\n  productImg: string;\r\n  handleClick: Function;\r\n}\r\n\r\nconst ShortListCard: React.FC<ShortListCardProps> = ({\r\n  _id,\r\n  name,\r\n  productImg,\r\n  handleClick,\r\n}) => {\r\n  return (\r\n    <Card\r\n      style={{ maxHeight: \"200px\", maxWidth: \"180px\", position: \"relative\" }}\r\n    >\r\n      <CardHeader\r\n        style={{ position: \"absolute\", top: \"-5px\", right: \"-5px\" }}\r\n        action={\r\n          <IconButton\r\n            aria-label=\"delete-item\"\r\n            size=\"small\"\r\n            onClick={() => handleClick(_id)}\r\n          >\r\n            <CancelRoundedIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <CardMedia>\r\n        <img src={productImg} alt={name} />\r\n      </CardMedia>\r\n\r\n      <Typography\r\n        style={{ padding: \"5px 10px\", fontSize: \"14px\", lineHeight: \"14px\" }}\r\n        variant=\"h3\"\r\n        gutterBottom\r\n      >\r\n        {name.substr(0, 20)}\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ShortListCard;\r\n",{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","replacedBy":"514"},{"ruleId":"515","severity":1,"message":"516","line":21,"column":8,"nodeType":"517","endLine":21,"endColumn":10,"suggestions":"518"},{"ruleId":"519","severity":1,"message":"520","line":4,"column":9,"nodeType":"521","messageId":"522","endLine":4,"endColumn":13},{"ruleId":"519","severity":1,"message":"523","line":13,"column":27,"nodeType":"521","messageId":"522","endLine":13,"endColumn":45},{"ruleId":"519","severity":1,"message":"524","line":2,"column":10,"nodeType":"521","messageId":"522","endLine":2,"endColumn":20},{"ruleId":"519","severity":1,"message":"525","line":2,"column":22,"nodeType":"521","messageId":"522","endLine":2,"endColumn":30},{"ruleId":"519","severity":1,"message":"523","line":12,"column":27,"nodeType":"521","messageId":"522","endLine":12,"endColumn":45},{"ruleId":"526","severity":1,"message":"527","line":31,"column":9,"nodeType":"528","messageId":"529","endLine":31,"endColumn":11},{"ruleId":"519","severity":1,"message":"530","line":2,"column":31,"nodeType":"521","messageId":"522","endLine":2,"endColumn":47},{"ruleId":"531","severity":1,"message":"532","line":142,"column":5,"nodeType":"533","messageId":"534","endLine":144,"endColumn":6},{"ruleId":"531","severity":1,"message":"532","line":145,"column":5,"nodeType":"533","messageId":"534","endLine":147,"endColumn":6},{"ruleId":"531","severity":1,"message":"532","line":148,"column":5,"nodeType":"533","messageId":"534","endLine":150,"endColumn":6},{"ruleId":"531","severity":1,"message":"532","line":151,"column":5,"nodeType":"533","messageId":"534","endLine":153,"endColumn":6},{"ruleId":"531","severity":1,"message":"532","line":154,"column":5,"nodeType":"533","messageId":"534","endLine":156,"endColumn":6},{"ruleId":"531","severity":1,"message":"532","line":157,"column":5,"nodeType":"533","messageId":"534","endLine":159,"endColumn":6},{"ruleId":"519","severity":1,"message":"524","line":2,"column":10,"nodeType":"521","messageId":"522","endLine":2,"endColumn":20},{"ruleId":"519","severity":1,"message":"525","line":2,"column":22,"nodeType":"521","messageId":"522","endLine":2,"endColumn":30},{"ruleId":"519","severity":1,"message":"535","line":3,"column":3,"nodeType":"521","messageId":"522","endLine":3,"endColumn":14},"no-native-reassign",["536"],"no-negated-in-lhs",["537"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_fId', '_sId', and 'loadAllData'. Either include them or remove the dependency array.","ArrayExpression",["538"],"@typescript-eslint/no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","'setResponseMessage' is assigned a value but never used.","'fieldNames' is defined but never used.","'messages' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'handleGoogleAuth' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"539","fix":"540"},"Update the dependencies array to be: [_fId, _sId, loadAllData]",{"range":"541","text":"542"},[739,741],"[_fId, _sId, loadAllData]"]