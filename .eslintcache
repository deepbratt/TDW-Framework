[{"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\index.tsx":"1","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\store.ts":"2","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\App.tsx":"3","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\rootReducer.ts":"4","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\theme.ts":"5","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\routes.tsx":"6","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\layoutSlice.ts":"7","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\authSlice.ts":"8","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\globalFontSize.ts":"9","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\color.ts":"10","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\colors\\colors.ts":"11","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\privateRoutes.tsx":"12","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\publicRoutes.tsx":"13","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\paths.tsx":"14","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carComparision\\index.tsx":"15","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\SearchUsedCars\\index.tsx":"16","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithMobile.tsx":"17","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithEmail.tsx":"18","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\index.tsx":"19","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carDetail\\index.tsx":"20","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\verificationPage\\index.tsx":"21","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\index.tsx":"22","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\index.tsx":"23","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\globalStyles.ts":"24","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\formsConstants.ts":"25","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\index.tsx":"26","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\index.tsx":"27","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\index.tsx":"28","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\index.tsx":"29","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\home\\index.tsx":"30","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\buttonLabels.ts":"31","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\useForm.ts":"32","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\footerData.ts":"33","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Header.tsx":"34","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\useForm.ts":"35","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\useForm.ts":"36","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\useForm.ts":"37","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\filtersData.ts":"38","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\listingData.ts":"39","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\regex.ts":"40","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\index.tsx":"41","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\FullScreenDialog.tsx":"42","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\index.tsx":"43","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\paths.tsx":"44","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomButton.tsx":"45","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\useStyles.tsx":"46","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\color.constants.tsx":"47","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\Sidebar.tsx":"48","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\useForm.ts":"49","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\addEditCarData.ts":"50","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CustomStepperIcon.tsx":"51","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\useAddEditCar.tsx":"52","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\themeConstants.tsx":"53","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\styles.ts":"54","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\styles.ts":"55","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\HorizontalFilters\\index.tsx":"56","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\index.tsx":"57","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\index.tsx":"58","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\BreadCrumbs\\index.tsx":"59","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\style.tsx":"60","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\sidebarStyles.tsx":"61","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\UploadPhotosForm.tsx":"62","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarInformationForm.tsx":"63","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarAdditionalInformation.tsx":"64","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\Banner.tsx":"65","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\styles.ts":"66","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\styles.ts":"67","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\InputFieldWithButton.tsx":"68","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectComponent.tsx":"69","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\useHooks.tsx":"70","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\bannerStyles.tsx":"71","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\CustomTitle.tsx":"72","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\SearchSelect.tsx":"73","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\index.tsx":"74","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\index.tsx":"75","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\LayoutToggler\\index.tsx":"76","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\index.tsx":"77","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\Size.tsx":"78","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\DialogBox.tsx":"79","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\Breakpoints.tsx":"80","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\selectStyles.tsx":"81","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\styles.ts":"82","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\styles.ts":"83","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\index.tsx":"84","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\ListingBanner\\ListBannerContainer.tsx":"85","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\Text.tsx":"86","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\ListingBannerContext.tsx":"87","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\useStyles.tsx":"88","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\endpoints.ts":"89","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\useApi.ts":"90","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Toast.tsx":"91","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\API.ts":"92","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\getAllData.ts":"93","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\axios.ts":"94","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\dashboard\\index.tsx":"95","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\postAd\\index.tsx":"96","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\Text.ts":"97","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\index.tsx":"98","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\useStyles.ts":"99"},{"size":360,"mtime":1626090394180,"results":"100","hashOfConfig":"101"},{"size":487,"mtime":1625854514260,"results":"102","hashOfConfig":"101"},{"size":569,"mtime":1628686735019,"results":"103","hashOfConfig":"101"},{"size":254,"mtime":1627125065897,"results":"104","hashOfConfig":"101"},{"size":2100,"mtime":1628686403734,"results":"105","hashOfConfig":"101"},{"size":1069,"mtime":1625854514302,"results":"106","hashOfConfig":"101"},{"size":462,"mtime":1628187206727,"results":"107","hashOfConfig":"101"},{"size":767,"mtime":1628335153167,"results":"108","hashOfConfig":"101"},{"size":952,"mtime":1626451012547,"results":"109","hashOfConfig":"101"},{"size":148,"mtime":1628686403727,"results":"110","hashOfConfig":"101"},{"size":426,"mtime":1628686403735,"results":"111","hashOfConfig":"101"},{"size":775,"mtime":1628335153168,"results":"112","hashOfConfig":"101"},{"size":442,"mtime":1628335153170,"results":"113","hashOfConfig":"101"},{"size":4291,"mtime":1628686403719,"results":"114","hashOfConfig":"101"},{"size":193,"mtime":1628335153156,"results":"115","hashOfConfig":"101"},{"size":223,"mtime":1628335153155,"results":"116","hashOfConfig":"101"},{"size":4665,"mtime":1628688655382,"results":"117","hashOfConfig":"101"},{"size":4638,"mtime":1628687199274,"results":"118","hashOfConfig":"101"},{"size":946,"mtime":1628686403701,"results":"119","hashOfConfig":"101"},{"size":146,"mtime":1628686403704,"results":"120","hashOfConfig":"101"},{"size":255,"mtime":1628686937293,"results":"121","hashOfConfig":"101"},{"size":2886,"mtime":1628102902394,"results":"122","hashOfConfig":"101"},{"size":2324,"mtime":1628187206717,"results":"123","hashOfConfig":"101"},{"size":1019,"mtime":1628187206548,"results":"124","hashOfConfig":"101"},{"size":785,"mtime":1628686403637,"results":"125","hashOfConfig":"101"},{"size":3087,"mtime":1628689861106,"results":"126","hashOfConfig":"101"},{"size":3220,"mtime":1628689826487,"results":"127","hashOfConfig":"101"},{"size":7225,"mtime":1628686403707,"results":"128","hashOfConfig":"101"},{"size":3660,"mtime":1628187206701,"results":"129","hashOfConfig":"101"},{"size":829,"mtime":1628686522542,"results":"130","hashOfConfig":"101"},{"size":1524,"mtime":1628688895405,"results":"131","hashOfConfig":"101"},{"size":3264,"mtime":1628687596637,"results":"132","hashOfConfig":"101"},{"size":2474,"mtime":1626086088388,"results":"133","hashOfConfig":"101"},{"size":2273,"mtime":1628335152983,"results":"134","hashOfConfig":"101"},{"size":2295,"mtime":1628689967810,"results":"135","hashOfConfig":"101"},{"size":2030,"mtime":1628187206702,"results":"136","hashOfConfig":"101"},{"size":3638,"mtime":1628686403712,"results":"137","hashOfConfig":"101"},{"size":2170,"mtime":1628686403669,"results":"138","hashOfConfig":"101"},{"size":495,"mtime":1628686403672,"results":"139","hashOfConfig":"101"},{"size":939,"mtime":1628187206268,"results":"140","hashOfConfig":"101"},{"size":894,"mtime":1628187206298,"results":"141","hashOfConfig":"101"},{"size":2164,"mtime":1628187206285,"results":"142","hashOfConfig":"101"},{"size":7209,"mtime":1628187206744,"results":"143","hashOfConfig":"101"},{"size":280,"mtime":1628335152989,"results":"144","hashOfConfig":"101"},{"size":1160,"mtime":1628686403683,"results":"145","hashOfConfig":"101"},{"size":1587,"mtime":1628335152990,"results":"146","hashOfConfig":"101"},{"size":459,"mtime":1628686403699,"results":"147","hashOfConfig":"101"},{"size":1892,"mtime":1628335152985,"results":"148","hashOfConfig":"101"},{"size":2169,"mtime":1628690061078,"results":"149","hashOfConfig":"101"},{"size":1960,"mtime":1628088100636,"results":"150","hashOfConfig":"101"},{"size":1731,"mtime":1628088100653,"results":"151","hashOfConfig":"101"},{"size":7310,"mtime":1628088100658,"results":"152","hashOfConfig":"101"},{"size":513,"mtime":1628088100901,"results":"153","hashOfConfig":"101"},{"size":642,"mtime":1628187206384,"results":"154","hashOfConfig":"101"},{"size":1186,"mtime":1628187206855,"results":"155","hashOfConfig":"101"},{"size":1568,"mtime":1628187206932,"results":"156","hashOfConfig":"101"},{"size":24690,"mtime":1628686403725,"results":"157","hashOfConfig":"101"},{"size":5398,"mtime":1628684985029,"results":"158","hashOfConfig":"101"},{"size":1748,"mtime":1628187206282,"results":"159","hashOfConfig":"101"},{"size":786,"mtime":1628686403685,"results":"160","hashOfConfig":"101"},{"size":910,"mtime":1628335152988,"results":"161","hashOfConfig":"101"},{"size":3566,"mtime":1628102929322,"results":"162","hashOfConfig":"101"},{"size":4624,"mtime":1628102933319,"results":"163","hashOfConfig":"101"},{"size":4700,"mtime":1628102937711,"results":"164","hashOfConfig":"101"},{"size":3012,"mtime":1628686403696,"results":"165","hashOfConfig":"101"},{"size":1784,"mtime":1628187206529,"results":"166","hashOfConfig":"101"},{"size":143,"mtime":1628187206943,"results":"167","hashOfConfig":"101"},{"size":1559,"mtime":1628187206297,"results":"168","hashOfConfig":"101"},{"size":471,"mtime":1628088100654,"results":"169","hashOfConfig":"101"},{"size":361,"mtime":1628686403696,"results":"170","hashOfConfig":"101"},{"size":775,"mtime":1628335152981,"results":"171","hashOfConfig":"101"},{"size":1229,"mtime":1628335152898,"results":"172","hashOfConfig":"101"},{"size":3636,"mtime":1628686403691,"results":"173","hashOfConfig":"101"},{"size":824,"mtime":1628187206287,"results":"174","hashOfConfig":"101"},{"size":849,"mtime":1628187206276,"results":"175","hashOfConfig":"101"},{"size":1317,"mtime":1628187206473,"results":"176","hashOfConfig":"101"},{"size":1102,"mtime":1628187206289,"results":"177","hashOfConfig":"101"},{"size":256,"mtime":1628335152901,"results":"178","hashOfConfig":"101"},{"size":1038,"mtime":1628187206284,"results":"179","hashOfConfig":"101"},{"size":249,"mtime":1628088100634,"results":"180","hashOfConfig":"101"},{"size":1454,"mtime":1628686403692,"results":"181","hashOfConfig":"101"},{"size":515,"mtime":1628187206294,"results":"182","hashOfConfig":"101"},{"size":178,"mtime":1628187206280,"results":"183","hashOfConfig":"101"},{"size":604,"mtime":1628335152917,"results":"184","hashOfConfig":"101"},{"size":607,"mtime":1628335152992,"results":"185","hashOfConfig":"101"},{"size":1903,"mtime":1628686403699,"results":"186","hashOfConfig":"101"},{"size":1441,"mtime":1628686403686,"results":"187","hashOfConfig":"101"},{"size":1151,"mtime":1628686403689,"results":"188","hashOfConfig":"101"},{"size":229,"mtime":1628689997999,"results":"189","hashOfConfig":"101"},{"size":1864,"mtime":1628688057536,"results":"190","hashOfConfig":"101"},{"size":662,"mtime":1628686629238,"results":"191","hashOfConfig":"101"},{"size":264,"mtime":1628686712859,"results":"192","hashOfConfig":"101"},{"size":232,"mtime":1628684985420,"results":"193","hashOfConfig":"101"},{"size":631,"mtime":1628684985418,"results":"194","hashOfConfig":"101"},{"size":319,"mtime":1628686403714,"results":"195","hashOfConfig":"101"},{"size":436,"mtime":1628686403716,"results":"196","hashOfConfig":"101"},{"size":1487,"mtime":1628686404023,"results":"197","hashOfConfig":"101"},{"size":2269,"mtime":1628686403697,"results":"198","hashOfConfig":"101"},{"size":1202,"mtime":1628686403697,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"og5drl",{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"202"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"202"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"202"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\index.tsx",[],["402","403"],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\store.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\App.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\theme.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\routes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\layoutSlice.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\redux\\reducers\\authSlice.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\globalFontSize.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\theme\\color.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\colors\\colors.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\privateRoutes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\publicRoutes.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\routes\\paths.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carComparision\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\SearchUsedCars\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithMobile.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\SignupWithEmail.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carDetail\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\verificationPage\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\globalStyles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\formsConstants.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\home\\index.tsx",["404"],"import Banner from \"../../layout/Sections/Sections/Banner/Banner\";\r\n// import CategorySection from \"../../Sections/Sections/HomeSections/Category/CategorySection\";\r\n// import ComparisonContext from \"../../Sections/Sections/HomeSections/CarComparison/ComparisonContext\";\r\nimport {\r\n  Data,\r\n  Title,\r\n  subTitle,\r\n  filter,\r\n  category,\r\n  carModel,\r\n  priceRange,\r\n} from \"../../Utils/constants/language/Text\";\r\nexport interface HomeProps {}\r\n\r\nconst HomePage: React.FC<HomeProps> = () => {\r\n  return (\r\n    <div>\r\n      <Banner\r\n        Title={Title}\r\n        subTitle={subTitle}\r\n        category={category}\r\n        filter={filter}\r\n        range={priceRange}\r\n        carModel={carModel}\r\n      />\r\n      {/* <CategorySection  data={Data} />\r\n      <ComparisonContext/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\buttonLabels.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\signup\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\footerData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Header.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\forgetPassword\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\login\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\carsListing\\useForm.ts",["405","406"],"import React, { useState, useEffect } from \"react\";\r\nimport { fieldNames, messages } from \"../../Utils/constants/formsConstants\";\r\n\r\nconst initialValues: any = {\r\n  keywords: \"\",\r\n  priceFrom: 0,\r\n  priceTo: 0,\r\n  priceRange: [0, 50000000],\r\n  yearFrom: 0,\r\n  yearTo: 0,\r\n  yearRange: [1900, 2021],\r\n  province: [],\r\n  city: [],\r\n  mileageFrom: 0,\r\n  mileageTo: 0,\r\n  registrationCity: [],\r\n  mileageRange: [0, 1000000],\r\n  transmission: [],\r\n  engineType: [],\r\n  engineCapacityFrom: 0,\r\n  engineCapacityTo: 0,\r\n  engineCapacityRange: [600, 30000],\r\n  color: [],\r\n  bodyType: [],\r\n  pictireAvailability: false,\r\n  videoAvailability: false,\r\n  sellerType: [],\r\n  adType: [],\r\n  sortingOptions: \"\",\r\n};\r\n\r\nexport const useForm = (validateOnChange = true) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(initialValues);\r\n  const [appliedFilters, setAppliedFilters] = useState<any>([]);\r\n  // const [responseMessage, setResponseMessage] = useState(\"\");\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.info(\"APPLIED FILTERS\", appliedFilters);\r\n  }, [appliedFilters]);\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n    if (values[name] !== value) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    filterName: string\r\n  ) => {\r\n    let temp = values[filterName];\r\n    if (e.target.checked) {\r\n      temp.push(e.target.name);\r\n    } else {\r\n      temp = temp.filter((item: string) => item !== e.target.name);\r\n    }\r\n    setValues({ ...values, [filterName]: temp });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(filterName)) {\r\n        setAppliedFilters([...appliedFilters, filterName]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(filterName);\r\n    }\r\n  };\r\n\r\n  const handleSingleCheckBoxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, checked } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: checked,\r\n    });\r\n    if (validateOnChange) validate({ [name]: checked });\r\n    if (e.target.checked) {\r\n      if (!appliedFilters.includes(name)) {\r\n        setAppliedFilters([...appliedFilters, name]);\r\n      }\r\n    }\r\n    if (!e.target.checked) {\r\n      removeFilter(name);\r\n    }\r\n  };\r\n\r\n  const removeFilter = (filterName: string) => {\r\n    setAppliedFilters(\r\n      appliedFilters.filter((filter: string) => filter !== filterName)\r\n    );\r\n    setValues((values: any) => {\r\n      values[filterName] = initialValues[filterName];\r\n      return { ...values };\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"btn clicked\", values);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    setAppliedFilters,\r\n    removeFilter,\r\n    resetForm,\r\n    validate,\r\n    handleSubmit,\r\n    // isLoading,\r\n    // responseMessage,\r\n  };\r\n};\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\filtersData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\listingData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\regex.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\FullScreenDialog.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\paths.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomButton.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\color.constants.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\resetPassword\\useForm.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\en\\addEditCarData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CustomStepperIcon.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\useAddEditCar.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\themeConstants.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\Footer\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\HorizontalFilters\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\index.tsx",["407"],"import {\r\n  Grid,\r\n  Slider,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FilterAccordion from \"../../components/Accordion\";\r\nimport {\r\n  Carfilters,\r\n  CarFiltersData,\r\n} from \"../../Utils/constants/language/en/filtersData\";\r\nimport { City, State } from \"country-state-city\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport InputFieldWithButton from \"../../components/InputField/InputFieldWithButton\";\r\nimport InputField from \"../../components/InputField\";\r\nimport { fieldNames } from \"../../Utils/constants/formsConstants\";\r\nimport { useForm } from \"../../pages/carsListing/useForm\";\r\nimport VerticalFilterStyles from \"./styles\";\r\nimport DialogBox from \"../../components/DialogBox\";\r\nimport { useState } from \"react\";\r\nimport { ICity } from \"country-state-city/dist/lib/interface\";\r\nimport { APPLIED_FILTERS } from \"../../Utils/constants/language/en/buttonLabels\";\r\n\r\nexport interface CarFiltersProps {}\r\n\r\nconst CarFilters: React.FC<CarFiltersProps> = () => {\r\n  const [searchResult, setSearchResult] = useState<ICity[]>();\r\n  const {} = VerticalFilterStyles();\r\n  const {\r\n    KEYWORDS,\r\n    PRICE_RANGE,\r\n    YEAR,\r\n    MAKE,\r\n    PROVINCE,\r\n    CITY,\r\n    REGISTRATION_CITY,\r\n    MILEAGE,\r\n    TRANSMISSION,\r\n    ENGINE_TYPE,\r\n    ENGINE_CAPACITY,\r\n    COLOR,\r\n    BODY_TYPE,\r\n    PICTURE_AVAILABILITY,\r\n    VIDEO_AVAILABILITY,\r\n    SELLER_TYPE,\r\n    AD_TYPE\r\n  } = CarFiltersData;\r\n\r\n  const majorCities = [\"Karachi\", \"Islamabad\", \"Lahore\", \"Peshawar\", \"Quetta\"];\r\n  const mainCarTypes = [\"Sedan\", \"Hatchback\", \"Pick Up\"];\r\n  const mainColors = [\"Black\", \"White\", \"Red\"];\r\n  const cities = City.getCitiesOfCountry(\"PK\");\r\n  const provinces = State.getStatesOfCountry(\"PK\");\r\n  const extractedCityNames = cities?.map((item) => item.name);\r\n  let cityNames = [];\r\n  if (extractedCityNames) {\r\n    cityNames.push(...extractedCityNames);\r\n  }\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    handleInputChange,\r\n    handleCheckboxChange,\r\n    handleSingleCheckBoxChange,\r\n    appliedFilters,\r\n    removeFilter,\r\n    handleSubmit,\r\n  } = useForm(true);\r\n\r\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let result = City.getCitiesOfCountry(\"PK\")?.filter(\r\n      (city: ICity) =>\r\n        city.name.substr(0, e.target.value.length).toLowerCase() ===\r\n        e.target.value.toLowerCase()\r\n    );\r\n    if (e.target.value === \"\") {\r\n      result = [];\r\n    }\r\n    setSearchResult(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {appliedFilters.length > 0 && (\r\n        <FilterAccordion title={APPLIED_FILTERS}>\r\n          <Grid container spacing={1}>\r\n            {appliedFilters.map((filter: any) => (\r\n              <Grid\r\n                key={`filter-${filter}`}\r\n                item\r\n                container\r\n                justifyContent=\"space-between\"\r\n                xs={12}\r\n              >\r\n                <Typography variant=\"body2\">{filter}</Typography>\r\n                <IconButton size=\"small\" onClick={() => removeFilter(filter)}>\r\n                  <HighlightOffRoundedIcon color=\"secondary\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </FilterAccordion>\r\n      )}\r\n      <FilterAccordion title={KEYWORDS}>\r\n        <InputFieldWithButton\r\n          name={fieldNames.keywords}\r\n          label=\"Keywords\"\r\n          placeholder=\"Eg. Honda In Lahore\"\r\n          value={values.keywords}\r\n          error={errors.keywords}\r\n          onChange={handleInputChange}\r\n          handleClick={handleSubmit}\r\n        />\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PRICE_RANGE}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item container spacing={1}>\r\n            <Grid item xs={5}>\r\n              <InputField\r\n                name={fieldNames.priceFrom}\r\n                label=\"From\"\r\n                value={values.priceRange[0]}\r\n                error={errors.priceFrom}\r\n                onChange={(e: any) => {\r\n                  setValues((previousState: any) => {\r\n                    previousState.priceRange[0] = e.target.value;\r\n                    return { ...previousState };\r\n                  });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <InputFieldWithButton\r\n                name={fieldNames.priceTo}\r\n                label=\"To\"\r\n                value={values.priceRange[1]}\r\n                error={errors.priceTo}\r\n                onChange={(e: any) => {\r\n                  setValues((previousState: any) => {\r\n                    previousState.priceRange[1] = e.target.value;\r\n                    return { ...previousState };\r\n                  });\r\n                }}\r\n                handleClick={handleSubmit}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Slider\r\n              value={[values.priceRange[0], values.priceRange[1]]}\r\n              min={50000}\r\n              max={5000000}\r\n              onChange={(event: any, newValue: number | number[]) => {\r\n                setValues((previousState: any) => {\r\n                  console.log(newValue);\r\n                  previousState.priceRange = newValue as number[];\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={YEAR}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.yearFrom}\r\n              label=\"From\"\r\n              value={values.yearRange[0]}\r\n              error={errors.yearFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.priceRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.yearTo}\r\n              label=\"To\"\r\n              value={values.yearRange[1]}\r\n              error={errors.yearTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.priceRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={MAKE}>\r\n        <InputField label=\"Eg. Honda In Lahore\" />\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PROVINCE}>\r\n        <FormGroup>\r\n          {provinces.map((province) => (\r\n            <FormControlLabel\r\n              key={`province-${province.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.province.indexOf(province.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"province\")}\r\n                  name={province.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={province.name}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={CITY}>\r\n        <FormGroup>\r\n          {cityNames\r\n            .filter((item) => majorCities.includes(item))\r\n            .map((city) => (\r\n              <FormControlLabel\r\n                key={`city-${city}`}\r\n                control={\r\n                  <Checkbox\r\n                    checked={values.city.indexOf(city) > -1}\r\n                    onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                    name={city}\r\n                    color=\"secondary\"\r\n                  />\r\n                }\r\n                label={city}\r\n              />\r\n            ))}\r\n          <DialogBox title=\"Select Cities\">\r\n            <Grid style={{ display: \"flex\" }} container>\r\n              <Grid xs={12}>\r\n                <InputField\r\n                  variant=\"filled\"\r\n                  label=\"Search\"\r\n                  onChange={handleSearchInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  {\"Search Result\"}\r\n                </Typography>\r\n                {searchResult &&\r\n                  searchResult.map((city: ICity) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Grid>\r\n              {provinces.map((province) => (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {province.name}\r\n                  </Typography>\r\n                  {City.getCitiesOfState(\r\n                    province.countryCode,\r\n                    province.isoCode\r\n                  ).map((city) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={REGISTRATION_CITY}>\r\n        <FormGroup>\r\n          {cityNames\r\n            .filter((item) => majorCities.includes(item))\r\n            .map((city) => (\r\n              <FormControlLabel\r\n                key={`city-${city}`}\r\n                control={\r\n                  <Checkbox\r\n                    checked={values.registrationCity.indexOf(city) > -1}\r\n                    onChange={(e) =>\r\n                      handleCheckboxChange(e, \"registrationCity\")\r\n                    }\r\n                    name={city}\r\n                    color=\"secondary\"\r\n                  />\r\n                }\r\n                label={city}\r\n              />\r\n            ))}\r\n\r\n          <DialogBox title=\"Select Cities\">\r\n            <Grid style={{ display: \"flex\" }} container>\r\n              {provinces.map((province) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {province.name}\r\n                  </Typography>\r\n                  {City.getCitiesOfState(\r\n                    province.countryCode,\r\n                    province.isoCode\r\n                  ).map((city) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={`city-${city.name}`}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={values.city.indexOf(city.name) > -1}\r\n                            onChange={(e) => handleCheckboxChange(e, \"city\")}\r\n                            name={city.name}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          />\r\n                        }\r\n                        label={city.name}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={MILEAGE}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.mileageFrom}\r\n              label=\"From\"\r\n              value={values.mileageRange[0]}\r\n              error={errors.mileageFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.mileageTo}\r\n              label=\"To\"\r\n              value={values.mileageRange[1]}\r\n              error={errors.mileageTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={TRANSMISSION}>\r\n        <FormGroup>\r\n          {Carfilters.TRANSMISSION.map((type) => (\r\n            <FormControlLabel\r\n              key={`transmission-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.transmission.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"transmission\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={ENGINE_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.ENGINE_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`engine-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.engineType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"engineType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={ENGINE_CAPACITY}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item xs={5}>\r\n            <InputField\r\n              name={fieldNames.engineCapacityFrom}\r\n              label=\"From\"\r\n              value={values.engineCapacityRange[0]}\r\n              error={errors.engineCapacityFrom}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[0] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <InputFieldWithButton\r\n              name={fieldNames.engineCapacityTo}\r\n              label=\"To\"\r\n              value={values.engineCapacityRange[1]}\r\n              error={errors.engineCapacityTo}\r\n              onChange={(e: any) => {\r\n                setValues((previousState: any) => {\r\n                  previousState.mileageRange[1] = e.target.value;\r\n                  return { ...previousState };\r\n                });\r\n              }}\r\n              handleClick={handleSubmit}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={COLOR}>\r\n        <FormGroup>\r\n          {Carfilters.COLOR.filter((item) =>\r\n            mainColors.includes(item.name)\r\n          ).map((type) => (\r\n            <FormControlLabel\r\n              key={`color-type-${type.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.color.indexOf(type.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                  name={type.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <div style={{ display: \"flex\" }}>\r\n                  <span\r\n                    style={{\r\n                      borderRadius: \"50%\",\r\n                      maxWidth: \"20px\",\r\n                      maxHeight: \"20px\",\r\n                      minWidth: \"20px\",\r\n                      minHeight: \"20px\",\r\n                      backgroundColor: type.hex,\r\n                      border: \"0.2px solid grey\",\r\n                      marginRight: \"7px\",\r\n                    }}\r\n                  />\r\n                  <Typography>{type.name}</Typography>\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n          <FormControlLabel\r\n            key={`color-type-other`}\r\n            control={\r\n              <Checkbox\r\n                checked={values.color.indexOf(\"Other\") > -1}\r\n                onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                name=\"Other\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={\r\n              <div style={{ display: \"flex\" }}>\r\n                <Typography>Other Colors</Typography>\r\n              </div>\r\n            }\r\n          />\r\n\r\n          <DialogBox title=\"Select Color\">\r\n            <Grid container spacing={2}>\r\n              {Carfilters.COLOR.map((type) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControlLabel\r\n                    key={`color-type-${type.name}`}\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.color.indexOf(type.name) > -1}\r\n                        onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                        name={type.name}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <span\r\n                          style={{\r\n                            borderRadius: \"50%\",\r\n                            maxWidth: \"20px\",\r\n                            maxHeight: \"20px\",\r\n                            minWidth: \"20px\",\r\n                            minHeight: \"20px\",\r\n                            backgroundColor: type.hex,\r\n                            border: \"0.2px solid grey\",\r\n                            marginRight: \"7px\",\r\n                          }}\r\n                        />\r\n                        <Typography>{type.name}</Typography>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  key={`color-type-other`}\r\n                  control={\r\n                    <Checkbox\r\n                      checked={values.color.indexOf(\"Other\") > -1}\r\n                      onChange={(e) => handleCheckboxChange(e, \"color\")}\r\n                      name=\"Other\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                    />\r\n                  }\r\n                  label={\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <Typography>Other Colors</Typography>\r\n                    </div>\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={BODY_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.BODY_TYPE.filter((item) =>\r\n            mainCarTypes.includes(item.name)\r\n          ).map((type) => (\r\n            <FormControlLabel\r\n              key={`body-type-${type.name}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.bodyType.indexOf(type.name) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"bodyType\")}\r\n                  name={type.name}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <div style={{ display: \"flex\" }}>\r\n                  <img\r\n                    width=\"60px\"\r\n                    style={{ margin: \"0 10px\" }}\r\n                    src={type.icon}\r\n                    alt={type.name}\r\n                  />\r\n                  <Typography>{type.name}</Typography>\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n\r\n          <DialogBox title=\"Select Body Type\">\r\n            <Grid container spacing={2}>\r\n              {Carfilters.BODY_TYPE.map((type) => (\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControlLabel\r\n                    key={`body-type-${type.name}`}\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.bodyType.indexOf(type.name) > -1}\r\n                        onChange={(e) => handleCheckboxChange(e, \"bodyType\")}\r\n                        name={type.name}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <img\r\n                          width=\"60px\"\r\n                          style={{ margin: \"0 10px\" }}\r\n                          src={type.icon}\r\n                          alt={type.name}\r\n                        />\r\n                        <Typography>{type.name}</Typography>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </DialogBox>\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={PICTURE_AVAILABILITY}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.withPicture}\r\n                onChange={handleSingleCheckBoxChange}\r\n                name={fieldNames.pictureAvailability}\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={Carfilters.PICTURE_AVAILABILITY[0]}\r\n          />\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={VIDEO_AVAILABILITY}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.withVideo}\r\n                onChange={handleSingleCheckBoxChange}\r\n                name={fieldNames.videoAvailability}\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n              />\r\n            }\r\n            label={Carfilters.VIDEO_AVAILABILITY[0]}\r\n          />\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={SELLER_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.SELLER_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`seller-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.sellerType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"sellerType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n      <FilterAccordion title={AD_TYPE}>\r\n        <FormGroup>\r\n          {Carfilters.AD_TYPE.map((type) => (\r\n            <FormControlLabel\r\n              key={`ad-type-${type}`}\r\n              control={\r\n                <Checkbox\r\n                  checked={values.adType.indexOf(type) > -1}\r\n                  onChange={(e) => handleCheckboxChange(e, \"adType\")}\r\n                  name={type}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={type}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FilterAccordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarFilters;\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\BreadCrumbs\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\style.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Header\\Sidebar\\sidebarStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\UploadPhotosForm.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarInformationForm.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\CarAdditionalInformation.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\Banner.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingCard\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\sections\\VerticalCarFilters\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\InputField\\InputFieldWithButton.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\AddEditCar\\SelectComponent.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\useHooks.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\Banner\\bannerStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\CustomTitle.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\SearchSelect.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\LayoutToggler\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\CustomTitle\\Size.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\DialogBox\\DialogBox.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\Breakpoints.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\SearchSelect\\selectStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Dropdown\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Accordion\\styles.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\ListingBanner\\ListBannerContainer.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Utils\\Text.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\ListingBannerContext.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\ListingBanner\\useStyles.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\endpoints.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\hooks\\useApi.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\components\\Toast.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\API.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\getAllData.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\API\\axios.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\dashboard\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\pages\\postAd\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\Utils\\constants\\language\\Text.ts",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\index.tsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Job\\TDW-Framework\\src\\layout\\Sections\\Sections\\PinVerfication\\useStyles.ts",[],{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":5,"column":3,"nodeType":"414","messageId":"415","endLine":5,"endColumn":7},{"ruleId":"412","severity":1,"message":"416","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":20},{"ruleId":"412","severity":1,"message":"417","line":2,"column":22,"nodeType":"414","messageId":"415","endLine":2,"endColumn":30},{"ruleId":"418","severity":1,"message":"419","line":31,"column":9,"nodeType":"420","messageId":"421","endLine":31,"endColumn":11},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],"@typescript-eslint/no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","'fieldNames' is defined but never used.","'messages' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]